<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='merged' inline='true' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='merged' name='textscan.0ig01x50due57012mmcuh00zil9e'>
            <connection class='textscan' directory='/Users/karthikdoguparthi/Downloads/Studies/Labmentix/IPL Analysis' filename='merged.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0ig01x50due57012mmcuh00zil9e' name='merged.csv' table='[merged#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='match_id' ordinal='0' />
            <column datatype='integer' name='season' ordinal='1' />
            <column datatype='string' name='city' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='string' name='team1' ordinal='4' />
            <column datatype='string' name='team2' ordinal='5' />
            <column datatype='string' name='toss_winner' ordinal='6' />
            <column datatype='string' name='toss_decision' ordinal='7' />
            <column datatype='string' name='result' ordinal='8' />
            <column datatype='integer' name='dl_applied' ordinal='9' />
            <column datatype='string' name='winner' ordinal='10' />
            <column datatype='integer' name='win_by_runs' ordinal='11' />
            <column datatype='integer' name='win_by_wickets' ordinal='12' />
            <column datatype='string' name='player_of_match' ordinal='13' />
            <column datatype='string' name='venue' ordinal='14' />
            <column datatype='string' name='umpire1' ordinal='15' />
            <column datatype='string' name='umpire2' ordinal='16' />
            <column datatype='string' name='umpire3' ordinal='17' />
            <column datatype='integer' name='inning' ordinal='18' />
            <column datatype='string' name='batting_team' ordinal='19' />
            <column datatype='string' name='bowling_team' ordinal='20' />
            <column datatype='integer' name='over' ordinal='21' />
            <column datatype='integer' name='ball' ordinal='22' />
            <column datatype='string' name='batsman' ordinal='23' />
            <column datatype='string' name='non_striker' ordinal='24' />
            <column datatype='string' name='bowler' ordinal='25' />
            <column datatype='integer' name='is_super_over' ordinal='26' />
            <column datatype='integer' name='wide_runs' ordinal='27' />
            <column datatype='integer' name='bye_runs' ordinal='28' />
            <column datatype='integer' name='legbye_runs' ordinal='29' />
            <column datatype='integer' name='noball_runs' ordinal='30' />
            <column datatype='integer' name='penalty_runs' ordinal='31' />
            <column datatype='integer' name='batsman_runs' ordinal='32' />
            <column datatype='integer' name='extra_runs' ordinal='33' />
            <column datatype='integer' name='total_runs' ordinal='34' />
            <column datatype='string' name='player_dismissed' ordinal='35' />
            <column datatype='string' name='dismissal_kind' ordinal='36' />
            <column datatype='string' name='fielder' ordinal='37' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0ig01x50due57012mmcuh00zil9e' name='merged.csv' table='[merged#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='match_id' ordinal='0' />
            <column datatype='integer' name='season' ordinal='1' />
            <column datatype='string' name='city' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='string' name='team1' ordinal='4' />
            <column datatype='string' name='team2' ordinal='5' />
            <column datatype='string' name='toss_winner' ordinal='6' />
            <column datatype='string' name='toss_decision' ordinal='7' />
            <column datatype='string' name='result' ordinal='8' />
            <column datatype='integer' name='dl_applied' ordinal='9' />
            <column datatype='string' name='winner' ordinal='10' />
            <column datatype='integer' name='win_by_runs' ordinal='11' />
            <column datatype='integer' name='win_by_wickets' ordinal='12' />
            <column datatype='string' name='player_of_match' ordinal='13' />
            <column datatype='string' name='venue' ordinal='14' />
            <column datatype='string' name='umpire1' ordinal='15' />
            <column datatype='string' name='umpire2' ordinal='16' />
            <column datatype='string' name='umpire3' ordinal='17' />
            <column datatype='integer' name='inning' ordinal='18' />
            <column datatype='string' name='batting_team' ordinal='19' />
            <column datatype='string' name='bowling_team' ordinal='20' />
            <column datatype='integer' name='over' ordinal='21' />
            <column datatype='integer' name='ball' ordinal='22' />
            <column datatype='string' name='batsman' ordinal='23' />
            <column datatype='string' name='non_striker' ordinal='24' />
            <column datatype='string' name='bowler' ordinal='25' />
            <column datatype='integer' name='is_super_over' ordinal='26' />
            <column datatype='integer' name='wide_runs' ordinal='27' />
            <column datatype='integer' name='bye_runs' ordinal='28' />
            <column datatype='integer' name='legbye_runs' ordinal='29' />
            <column datatype='integer' name='noball_runs' ordinal='30' />
            <column datatype='integer' name='penalty_runs' ordinal='31' />
            <column datatype='integer' name='batsman_runs' ordinal='32' />
            <column datatype='integer' name='extra_runs' ordinal='33' />
            <column datatype='integer' name='total_runs' ordinal='34' />
            <column datatype='string' name='player_dismissed' ordinal='35' />
            <column datatype='string' name='dismissal_kind' ordinal='36' />
            <column datatype='string' name='fielder' ordinal='37' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[match_id]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>match_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dl_applied</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dl_applied]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>dl_applied</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_runs]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>win_by_runs</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_wickets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_wickets]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>win_by_wickets</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire3]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>umpire3</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inning</remote-name>
            <remote-type>20</remote-type>
            <local-name>[inning]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>inning</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batting_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batting_team]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>batting_team</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowling_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowling_team]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>bowling_team</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[over]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>over</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ball</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ball]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>ball</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batsman]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>batsman</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_striker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[non_striker]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>non_striker</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowler</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowler]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>bowler</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_super_over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_super_over]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>is_super_over</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wide_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wide_runs]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>wide_runs</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bye_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bye_runs]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>bye_runs</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>legbye_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[legbye_runs]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>legbye_runs</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>noball_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[noball_runs]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>noball_runs</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>penalty_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[penalty_runs]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>penalty_runs</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[batsman_runs]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>batsman_runs</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extra_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[extra_runs]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>extra_runs</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_runs]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>total_runs</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_dismissed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_dismissed]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>player_dismissed</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dismissal_kind</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dismissal_kind]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>dismissal_kind</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fielder</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fielder]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>fielder</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='CountD' caption='Unique Matches' datatype='string' name='[Calculation_5926103838203576320]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([match_id])' />
      </column>
      <column aggregation='Sum' caption='Toss Match Winners' datatype='integer' name='[Calculation_5926103838210154498]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [toss_winner] = [winner] THEN 1 ELSE 0 END' />
      </column>
      <column caption='All Teams' datatype='string' name='[Calculation_5926103838215462916]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [team1] = [team1] THEN [team1]&#10;ELSEIF [team2] = [team2] THEN [team2]&#10;END' />
      </column>
      <column caption='Maiden Over' datatype='integer' name='[Calculation_5926103838236397575]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF { FIXED [match_id], [bowler], [over] : SUM([total_runs]) } = 0&#10;THEN 1 ELSE 0 END' />
      </column>
      <column caption='Umpire' datatype='string' name='[Calculation_5926103838509174792]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [umpire1] = [umpire1] THEN [umpire1]&#10;ELSEIF [umpire2] = [umpire2] THEN [umpire2]&#10;END' />
      </column>
      <column aggregation='Sum' caption='Wicket' datatype='integer' name='[Calculation_5926103838515953674]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF NOT ISNULL([dismissal_kind]) &#10;   AND [dismissal_kind] &lt;&gt; &quot;run out&quot; &#10;THEN 1 &#10;ELSE 0 &#10;END' />
      </column>
      <column caption='Wickets in match' datatype='integer' name='[Calculation_5926103838516862987]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [match_id], [bowler] : SUM([Calculation_5926103838515953674]) }' />
      </column>
      <column caption='Max Wickets in Match' datatype='integer' name='[Calculation_5926103838517473292]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [match_id] : MAX([Calculation_5926103838516862987]) }' />
      </column>
      <column caption='Top bowler' datatype='integer' name='[Calculation_5926103838517735437]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_5926103838516862987] = [Calculation_5926103838517473292] THEN 1 ELSE 0 END' />
      </column>
      <column aggregation='CountD' caption='Batsman match id' datatype='string' name='[Calculation_5926103838546599958]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[batsman] + &quot; (Match &quot; + STR([match_id]) + &quot;)&quot;' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='merged.csv' datatype='table' name='[__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E]' role='measure' type='quantitative' />
      <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
      <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
      <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
      <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
      <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
      <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
      <column caption='Bye Runs' datatype='integer' name='[bye_runs]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
      <column caption='Dl Applied' datatype='integer' name='[dl_applied]' role='measure' type='quantitative' />
      <column caption='Extra Runs' datatype='integer' name='[extra_runs]' role='measure' type='quantitative' />
      <column caption='Fielder' datatype='string' name='[fielder]' role='dimension' type='nominal' />
      <column caption='Inning' datatype='integer' name='[inning]' role='measure' type='quantitative' />
      <column caption='Is Super Over' datatype='integer' name='[is_super_over]' role='measure' type='quantitative' />
      <column caption='Legbye Runs' datatype='integer' name='[legbye_runs]' role='measure' type='quantitative' />
      <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
      <column caption='Noball Runs' datatype='integer' name='[noball_runs]' role='measure' type='quantitative' />
      <column caption='Non Striker' datatype='string' name='[non_striker]' role='dimension' type='nominal' />
      <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
      <column caption='Penalty Runs' datatype='integer' name='[penalty_runs]' role='measure' type='quantitative' />
      <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
      <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
      <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
      <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
      <column caption='Umpire3' datatype='string' name='[umpire3]' role='dimension' type='nominal' />
      <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
      <column caption='Wide Runs' datatype='integer' name='[wide_runs]' role='measure' type='quantitative' />
      <column caption='Win By Runs' datatype='integer' name='[win_by_runs]' role='measure' type='quantitative' />
      <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column-instance column='[total_runs]' derivation='Sum' name='[cum:sum:total_runs:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_5926103838203576320]' derivation='None' name='[none:Calculation_5926103838203576320:nk]' pivot='key' type='nominal' />
      <column-instance column='[dl_applied]' derivation='None' name='[none:dl_applied:ok]' pivot='key' type='ordinal' />
      <column-instance column='[inning]' derivation='None' name='[none:inning:qk]' pivot='key' type='quantitative' />
      <column-instance column='[inning]' derivation='Sum' name='[sum:inning:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/k_/mpmmpky14p77ppf84hhcggzm0000gn/T/tableau-temp/#TableauTemp_0j05ut308ur1tu16x20sq0i7af4k.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/28/2025 11:59:16 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>match_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[match_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>match_id</remote-alias>
              <ordinal>0</ordinal>
              <family>merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2680</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>season</remote-name>
              <remote-type>20</remote-type>
              <local-name>[season]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>season</remote-alias>
              <ordinal>1</ordinal>
              <family>merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>2</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>58</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>3</ordinal>
              <family>merged.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1615</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>team1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[team1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>team1</remote-alias>
              <ordinal>4</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>team2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[team2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>team2</remote-alias>
              <ordinal>5</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>toss_winner</remote-name>
              <remote-type>129</remote-type>
              <local-name>[toss_winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>toss_winner</remote-alias>
              <ordinal>6</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>toss_decision</remote-name>
              <remote-type>129</remote-type>
              <local-name>[toss_decision]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>toss_decision</remote-alias>
              <ordinal>7</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>result</remote-name>
              <remote-type>129</remote-type>
              <local-name>[result]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>result</remote-alias>
              <ordinal>8</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dl_applied</remote-name>
              <remote-type>20</remote-type>
              <local-name>[dl_applied]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dl_applied</remote-alias>
              <ordinal>9</ordinal>
              <family>merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>winner</remote-name>
              <remote-type>129</remote-type>
              <local-name>[winner]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>winner</remote-alias>
              <ordinal>10</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>win_by_runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[win_by_runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>win_by_runs</remote-alias>
              <ordinal>11</ordinal>
              <family>merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>166</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>win_by_wickets</remote-name>
              <remote-type>20</remote-type>
              <local-name>[win_by_wickets]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>win_by_wickets</remote-alias>
              <ordinal>12</ordinal>
              <family>merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>player_of_match</remote-name>
              <remote-type>129</remote-type>
              <local-name>[player_of_match]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>player_of_match</remote-alias>
              <ordinal>13</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>528</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>venue</remote-name>
              <remote-type>129</remote-type>
              <local-name>[venue]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>venue</remote-alias>
              <ordinal>14</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>umpire1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[umpire1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>umpire1</remote-alias>
              <ordinal>15</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>75</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>umpire2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[umpire2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>umpire2</remote-alias>
              <ordinal>16</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>76</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>umpire3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[umpire3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>umpire3</remote-alias>
              <ordinal>17</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>inning</remote-name>
              <remote-type>20</remote-type>
              <local-name>[inning]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>inning</remote-alias>
              <ordinal>18</ordinal>
              <family>merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>batting_team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[batting_team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>batting_team</remote-alias>
              <ordinal>19</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bowling_team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[bowling_team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bowling_team</remote-alias>
              <ordinal>20</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>over</remote-name>
              <remote-type>20</remote-type>
              <local-name>[over]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>over</remote-alias>
              <ordinal>21</ordinal>
              <family>merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ball</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ball]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ball</remote-alias>
              <ordinal>22</ordinal>
              <family>merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>batsman</remote-name>
              <remote-type>129</remote-type>
              <local-name>[batsman]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>batsman</remote-alias>
              <ordinal>23</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1188</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>non_striker</remote-name>
              <remote-type>129</remote-type>
              <local-name>[non_striker]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>non_striker</remote-alias>
              <ordinal>24</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>865</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bowler</remote-name>
              <remote-type>129</remote-type>
              <local-name>[bowler]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bowler</remote-alias>
              <ordinal>25</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>937</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_super_over</remote-name>
              <remote-type>20</remote-type>
              <local-name>[is_super_over]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_super_over</remote-alias>
              <ordinal>26</ordinal>
              <family>merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>wide_runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[wide_runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>wide_runs</remote-alias>
              <ordinal>27</ordinal>
              <family>merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bye_runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[bye_runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bye_runs</remote-alias>
              <ordinal>28</ordinal>
              <family>merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>legbye_runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[legbye_runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>legbye_runs</remote-alias>
              <ordinal>29</ordinal>
              <family>merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>noball_runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[noball_runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>noball_runs</remote-alias>
              <ordinal>30</ordinal>
              <family>merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>penalty_runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[penalty_runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>penalty_runs</remote-alias>
              <ordinal>31</ordinal>
              <family>merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>batsman_runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[batsman_runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>batsman_runs</remote-alias>
              <ordinal>32</ordinal>
              <family>merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>extra_runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[extra_runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>extra_runs</remote-alias>
              <ordinal>33</ordinal>
              <family>merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_runs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_runs</remote-alias>
              <ordinal>34</ordinal>
              <family>merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>player_dismissed</remote-name>
              <remote-type>129</remote-type>
              <local-name>[player_dismissed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>player_dismissed</remote-alias>
              <ordinal>35</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1632</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dismissal_kind</remote-name>
              <remote-type>129</remote-type>
              <local-name>[dismissal_kind]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dismissal_kind</remote-alias>
              <ordinal>36</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fielder</remote-name>
              <remote-type>129</remote-type>
              <local-name>[fielder]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fielder</remote-alias>
              <ordinal>37</ordinal>
              <family>merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1567</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_375F11187EC04B8EBB108A09EE295F1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_5926103838203576320:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;109&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;129&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;149&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;169&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;189&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;209&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;229&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;249&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;269&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;289&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;29&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;309&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;329&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;349&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;369&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;389&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;409&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;429&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;449&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;469&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;489&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;49&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;509&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;529&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;549&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;569&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;589&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;609&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;629&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;69&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;89&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;9&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;101&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;121&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;141&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;161&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;181&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;201&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;21&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;221&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;241&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;261&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;281&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;301&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;321&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;341&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;361&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;381&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;401&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;41&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;421&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;441&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;461&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;481&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;501&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;521&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;541&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;561&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;581&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;601&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;61&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;621&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;81&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;105&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;125&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;145&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;165&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;185&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;205&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;225&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;245&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;25&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;265&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;285&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;305&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;325&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;345&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;365&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;385&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;405&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;425&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;445&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;45&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;465&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;485&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;505&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;525&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;545&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;565&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;585&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;605&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;625&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;65&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;85&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;113&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;13&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;133&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;153&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;173&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;193&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;213&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;233&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;253&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;273&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;293&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;313&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;33&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;333&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;353&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;373&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;393&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;413&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;433&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;453&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;473&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;493&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;513&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;53&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;533&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;553&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;573&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;593&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;613&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;633&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;73&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;93&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;110&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;130&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;150&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;170&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;190&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;210&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;230&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;250&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;270&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;290&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;30&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;310&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;330&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;350&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;370&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;390&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;410&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;430&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;450&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;470&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;490&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;50&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;510&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;550&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;570&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;590&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;610&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;630&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;70&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;90&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;106&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;126&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;146&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;166&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;186&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;206&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;226&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;246&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;26&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;266&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;286&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;306&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;326&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;346&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;366&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;386&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;406&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;426&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;446&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;46&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;466&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;486&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;506&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;526&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;546&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;566&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;586&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;606&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;626&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;66&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;86&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;119&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;139&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;159&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;179&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;19&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;199&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;219&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;239&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;259&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;279&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;299&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;319&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;339&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;359&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;379&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;39&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;399&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;419&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;439&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;459&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;479&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;499&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;519&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;539&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;559&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;579&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;59&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;599&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;619&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;79&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;99&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;102&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;122&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;142&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;162&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;182&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;202&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;22&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;222&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;242&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;262&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;282&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;302&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;322&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;342&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;362&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;382&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;402&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;42&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;422&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;442&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;462&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;482&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;502&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;522&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;542&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;562&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;582&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;602&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;62&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;622&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;82&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;117&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;137&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;157&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;17&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;177&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;197&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;217&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;237&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;257&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;277&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;297&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;317&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;337&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;357&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;37&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;377&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;397&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;417&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;437&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;457&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;477&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;497&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;517&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;537&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;557&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;57&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;577&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;597&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;617&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;77&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;97&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;107&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;127&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;147&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;167&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;187&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;207&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;227&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;247&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;267&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;27&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;287&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;307&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;327&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;347&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;367&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;387&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;407&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;427&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;447&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;467&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;47&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;487&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;507&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;527&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;547&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;567&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;587&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;607&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;627&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;67&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;7&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;87&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;114&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;134&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;14&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;154&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;174&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;194&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;214&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;234&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;254&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;274&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;294&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;314&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;334&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;34&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;354&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;374&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;394&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;414&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;434&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;454&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;474&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;494&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;514&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;534&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;54&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;554&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;574&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;594&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;614&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;634&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;74&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;94&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;115&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;135&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;15&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;155&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;175&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;195&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;215&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;235&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;255&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;275&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;295&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;315&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;335&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;35&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;355&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;375&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;395&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;415&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;435&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;455&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;475&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;495&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;515&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;535&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;55&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;555&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;575&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;595&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;615&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;635&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;75&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;95&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;118&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;138&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;158&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;178&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;18&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;198&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;218&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;238&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;258&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;278&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;298&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;318&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;338&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;358&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;378&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;38&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;398&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;418&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;438&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;458&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;478&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;498&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;518&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;538&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;558&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;578&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;58&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;598&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;618&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;78&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;98&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;100&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;120&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;140&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;160&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;180&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;20&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;200&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;220&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;240&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;260&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;280&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;300&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;320&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;340&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;360&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;380&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;40&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;400&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;420&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;440&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;460&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;480&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;500&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;520&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;540&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;560&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;580&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;60&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;600&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;620&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;80&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;111&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;131&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;151&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;171&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;191&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;211&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;231&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;251&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;271&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;291&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;31&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;311&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;331&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;351&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;371&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;391&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;411&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;431&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;451&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;471&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;491&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;51&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;511&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;531&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;551&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;571&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;591&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;611&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;631&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;71&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;91&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;108&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;128&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;148&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;168&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;188&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;208&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;228&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;248&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;268&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;288&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;308&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;328&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;348&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;368&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;388&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;408&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;428&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;448&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;468&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;48&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;488&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;508&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;528&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;548&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;568&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;588&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;608&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;628&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;68&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;8&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;88&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;103&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;123&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;143&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;163&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;183&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;203&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;223&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;23&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;243&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;263&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;283&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;303&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;323&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;343&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;363&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;383&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;403&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;423&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;43&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;443&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;463&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;483&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;503&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;523&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;543&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;563&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;583&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;603&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;623&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;63&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;83&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;116&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;136&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;156&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;16&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;176&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;196&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;216&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;236&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;256&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;276&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;296&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;316&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;336&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;356&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;36&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;376&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;396&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;416&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;436&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;456&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;476&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;496&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;516&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;536&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;556&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;56&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;576&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;596&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;616&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;636&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;76&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;96&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;112&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;12&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;132&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;152&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;172&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;192&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;212&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;232&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;252&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;272&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;292&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;312&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;32&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;332&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;352&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;372&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;392&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;412&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;432&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;452&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;472&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;492&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;512&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;52&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;532&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;552&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;572&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;592&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;612&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;632&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;72&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;92&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;104&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;124&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;144&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;164&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;184&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;204&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;224&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;24&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;244&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;264&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;284&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;304&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;324&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;344&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;364&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;384&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;404&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;424&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;44&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;444&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;464&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;484&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;504&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;524&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;544&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;564&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;584&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;604&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;624&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;64&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;84&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:dl_applied:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:inning:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:inning:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xrptt712xxyiz1cly71b0lpe2l9].[cum:sum:total_runs:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='merged.csv' id='merged.csv_375F11187EC04B8EBB108A09EE295F1E'>
            <properties context=''>
              <relation connection='textscan.0ig01x50due57012mmcuh00zil9e' name='merged.csv' table='[merged#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='match_id' ordinal='0' />
                  <column datatype='integer' name='season' ordinal='1' />
                  <column datatype='string' name='city' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='string' name='team1' ordinal='4' />
                  <column datatype='string' name='team2' ordinal='5' />
                  <column datatype='string' name='toss_winner' ordinal='6' />
                  <column datatype='string' name='toss_decision' ordinal='7' />
                  <column datatype='string' name='result' ordinal='8' />
                  <column datatype='integer' name='dl_applied' ordinal='9' />
                  <column datatype='string' name='winner' ordinal='10' />
                  <column datatype='integer' name='win_by_runs' ordinal='11' />
                  <column datatype='integer' name='win_by_wickets' ordinal='12' />
                  <column datatype='string' name='player_of_match' ordinal='13' />
                  <column datatype='string' name='venue' ordinal='14' />
                  <column datatype='string' name='umpire1' ordinal='15' />
                  <column datatype='string' name='umpire2' ordinal='16' />
                  <column datatype='string' name='umpire3' ordinal='17' />
                  <column datatype='integer' name='inning' ordinal='18' />
                  <column datatype='string' name='batting_team' ordinal='19' />
                  <column datatype='string' name='bowling_team' ordinal='20' />
                  <column datatype='integer' name='over' ordinal='21' />
                  <column datatype='integer' name='ball' ordinal='22' />
                  <column datatype='string' name='batsman' ordinal='23' />
                  <column datatype='string' name='non_striker' ordinal='24' />
                  <column datatype='string' name='bowler' ordinal='25' />
                  <column datatype='integer' name='is_super_over' ordinal='26' />
                  <column datatype='integer' name='wide_runs' ordinal='27' />
                  <column datatype='integer' name='bye_runs' ordinal='28' />
                  <column datatype='integer' name='legbye_runs' ordinal='29' />
                  <column datatype='integer' name='noball_runs' ordinal='30' />
                  <column datatype='integer' name='penalty_runs' ordinal='31' />
                  <column datatype='integer' name='batsman_runs' ordinal='32' />
                  <column datatype='integer' name='extra_runs' ordinal='33' />
                  <column datatype='integer' name='total_runs' ordinal='34' />
                  <column datatype='string' name='player_dismissed' ordinal='35' />
                  <column datatype='string' name='dismissal_kind' ordinal='36' />
                  <column datatype='string' name='fielder' ordinal='37' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
      <datasources>
        <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
      </datasources>
      <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
        <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
        <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]'>
        <groupfilter function='level-members' level='[none:season:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Matches Won by Runs (per Team)'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column aggregation='CountD' caption='Unique Matches' datatype='string' name='[Calculation_5926103838203576320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([match_id])' />
            </column>
            <column-instance column='[Calculation_5926103838203576320]' derivation='CountD' name='[ctd:Calculation_5926103838203576320:qk]' pivot='key' type='quantitative' />
            <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column-instance column='[win_by_runs]' derivation='None' name='[none:win_by_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
            <column caption='Win By Runs' datatype='integer' name='[win_by_runs]' role='measure' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:win_by_runs:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:winner:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:win_by_runs:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' scope='rows' value='Matches won by Runs' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:winner:nk]</cols>
      </table>
      <simple-id uuid='{9F057933-CC1B-4539-9F38-E533F8EE2E94}' />
    </worksheet>
    <worksheet name='Matches Won by Wickets (per Team)'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column aggregation='CountD' caption='Unique Matches' datatype='string' name='[Calculation_5926103838203576320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([match_id])' />
            </column>
            <column-instance column='[Calculation_5926103838203576320]' derivation='CountD' name='[ctd:Calculation_5926103838203576320:qk]' pivot='key' type='quantitative' />
            <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column-instance column='[win_by_wickets]' derivation='None' name='[none:win_by_wickets:qk]' pivot='key' type='quantitative' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
            <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:win_by_wickets:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:winner:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:win_by_wickets:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' scope='rows' value='Matches won by Wickets' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:winner:nk]</cols>
      </table>
      <simple-id uuid='{45D632B5-37C9-4312-B7B1-1959808A88BD}' />
    </worksheet>
    <worksheet name='Normal Result Matches per Season'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column aggregation='CountD' caption='Unique Matches' datatype='string' name='[Calculation_5926103838203576320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([match_id])' />
            </column>
            <column-instance column='[Calculation_5926103838203576320]' derivation='CountD' name='[ctd:Calculation_5926103838203576320:qk]' pivot='key' type='quantitative' />
            <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
            <column-instance column='[result]' derivation='None' name='[none:result:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:result:nk]'>
            <groupfilter function='member' level='[none:result:nk]' member='&quot;normal&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:result:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' scope='rows' value='No of Matches' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]</rows>
        <cols>([federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:result:nk] / [federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok])</cols>
      </table>
      <simple-id uuid='{7363B247-17A3-4359-ADF7-1BC8E271CA35}' />
    </worksheet>
    <worksheet name='Number of Matches Affected by DL Method (per Team)'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column aggregation='CountD' caption='Unique Matches' datatype='string' name='[Calculation_5926103838203576320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([match_id])' />
            </column>
            <column caption='All Teams' datatype='string' name='[Calculation_5926103838215462916]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [team1] = [team1] THEN [team1]&#10;ELSEIF [team2] = [team2] THEN [team2]&#10;END' />
            </column>
            <column-instance column='[Calculation_5926103838203576320]' derivation='CountD' name='[ctd:Calculation_5926103838203576320:qk]' pivot='key' type='quantitative' />
            <column caption='Dl Applied' datatype='integer' name='[dl_applied]' role='measure' type='quantitative' />
            <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_5926103838215462916]' derivation='None' name='[none:Calculation_5926103838215462916:nk]' pivot='key' type='nominal' />
            <column-instance column='[dl_applied]' derivation='None' name='[none:dl_applied:ok]' pivot='key' type='ordinal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:dl_applied:ok]'>
            <groupfilter function='member' level='[none:dl_applied:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838215462916:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:dl_applied:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' scope='rows' value='Matches Affected' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838215462916:nk]</cols>
      </table>
      <simple-id uuid='{1953BC3E-662B-4459-9358-1F40FAA5C6BB}' />
    </worksheet>
    <worksheet name='Players Retired Hurt'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <_.fcp.ObjectModelTableType.false...column caption='merged.csv' datatype='integer' name='[__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='merged.csv' datatype='table' name='[__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E]' role='measure' type='quantitative' />
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[dismissal_kind]' derivation='None' name='[none:dismissal_kind:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:dismissal_kind:nk]'>
            <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;retired hurt&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:batsman:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:dismissal_kind:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' scope='rows' value='No of Retired Dismissals' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:batsman:nk]</cols>
      </table>
      <simple-id uuid='{59186B20-F159-4CC5-8BD6-FEE539E1B575}' />
    </worksheet>
    <worksheet name='Result Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column aggregation='CountD' caption='Unique Matches' datatype='string' name='[Calculation_5926103838203576320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([match_id])' />
            </column>
            <column-instance column='[Calculation_5926103838203576320]' derivation='CountD' name='[ctd:Calculation_5926103838203576320:qk]' pivot='key' type='quantitative' />
            <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
            <column-instance column='[result]' derivation='None' name='[none:result:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:result:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' scope='rows' value='No of Matches' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:result:nk]</cols>
      </table>
      <simple-id uuid='{623A6083-2C96-4BF2-A797-E68B703156AB}' />
    </worksheet>
    <worksheet name='Running Total of Each Match'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column aggregation='CountD' caption='Unique Matches' datatype='string' name='[Calculation_5926103838203576320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([match_id])' />
            </column>
            <column-instance column='[total_runs]' derivation='Sum' name='[cum:sum:total_runs:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column caption='Inning' datatype='integer' name='[inning]' role='measure' type='quantitative' />
            <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_5926103838203576320]' derivation='None' name='[none:Calculation_5926103838203576320:nk]' pivot='key' type='nominal' />
            <column-instance column='[inning]' derivation='None' name='[none:inning:ok]' pivot='key' type='ordinal' />
            <column-instance column='[inning]' derivation='None' name='[none:inning:qk]' pivot='key' type='quantitative' />
            <column-instance column='[over]' derivation='None' name='[none:over:qk]' pivot='key' type='quantitative' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838203576320:nk]'>
            <groupfilter function='member' level='[none:Calculation_5926103838203576320:nk]' member='&quot;1&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:inning:ok]'>
            <groupfilter function='level-members' level='[none:inning:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838203576320:nk]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:inning:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[cum:sum:total_runs:qk]' scope='rows' value='Total Runs' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:inning:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff2600</color>
                <color>#f84829</color>
                <color>#f26850</color>
                <color>#ec8776</color>
                <color>#e5a499</color>
                <color>#dfbfba</color>
                <color>#d9d9d9</color>
                <color>#dfdeba</color>
                <color>#e5e499</color>
                <color>#ecea76</color>
                <color>#f2ef50</color>
                <color>#f8f529</color>
                <color>#fffb00</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:inning:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[cum:sum:total_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[cum:sum:total_runs:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:over:qk]</cols>
      </table>
      <simple-id uuid='{0A80EFA2-2E4C-4653-8ECF-D0EB13A7C0CE}' />
    </worksheet>
    <worksheet name='Teams That Won Both Toss and Match'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column aggregation='CountD' caption='Unique Matches' datatype='string' name='[Calculation_5926103838203576320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([match_id])' />
            </column>
            <column aggregation='Sum' caption='Toss Match Winners' datatype='integer' name='[Calculation_5926103838210154498]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [toss_winner] = [winner] THEN 1 ELSE 0 END' />
            </column>
            <column-instance column='[Calculation_5926103838203576320]' derivation='CountD' name='[ctd:Calculation_5926103838203576320:qk]' pivot='key' type='quantitative' />
            <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_5926103838210154498]' derivation='None' name='[none:Calculation_5926103838210154498:ok]' pivot='key' type='ordinal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
            <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838210154498:ok]'>
            <groupfilter function='member' level='[none:Calculation_5926103838210154498:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:winner:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838210154498:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' scope='rows' value='No of Matches' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:winner:nk]</cols>
      </table>
      <simple-id uuid='{CF5EB589-3C0D-475F-A739-B33C42308D4C}' />
    </worksheet>
    <worksheet name='Teams That Won Toss but Lost Match'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column aggregation='CountD' caption='Unique Matches' datatype='string' name='[Calculation_5926103838203576320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([match_id])' />
            </column>
            <column aggregation='Sum' caption='Toss Match Winners' datatype='integer' name='[Calculation_5926103838210154498]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [toss_winner] = [winner] THEN 1 ELSE 0 END' />
            </column>
            <column-instance column='[Calculation_5926103838203576320]' derivation='CountD' name='[ctd:Calculation_5926103838203576320:qk]' pivot='key' type='quantitative' />
            <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_5926103838210154498]' derivation='None' name='[none:Calculation_5926103838210154498:ok]' pivot='key' type='ordinal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
            <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838210154498:ok]'>
            <groupfilter function='member' level='[none:Calculation_5926103838210154498:ok]' member='0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:winner:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:winner:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:winner:nk]' member='&quot;Tie Match&quot;' />
                <groupfilter function='member' level='[none:winner:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:winner:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838210154498:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' scope='rows' value='No of Matches' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:winner:nk]</cols>
      </table>
      <simple-id uuid='{70291ABE-808B-4062-B29C-2D34514F381F}' />
    </worksheet>
    <worksheet name='Top 10 Batsmen Most Dismissed by Catches'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <_.fcp.ObjectModelTableType.false...column caption='merged.csv' datatype='integer' name='[__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='merged.csv' datatype='table' name='[__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E]' role='measure' type='quantitative' />
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[dismissal_kind]' derivation='None' name='[none:dismissal_kind:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:batsman:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:batsman:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:dismissal_kind:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;caught&quot;' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;caught and bowled&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:batsman:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:dismissal_kind:nk]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:batsman:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' scope='rows' value='No of caught dismissals' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:batsman:nk]</cols>
      </table>
      <simple-id uuid='{F6EE399A-642A-437D-8A89-43421D92E064}' />
    </worksheet>
    <worksheet name='Top 10 Bowlers Who Conceded Most Extras'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column caption='Extra Runs' datatype='integer' name='[extra_runs]' role='measure' type='quantitative' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
            <column-instance column='[extra_runs]' derivation='Sum' name='[sum:extra_runs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([extra_runs])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:bowler:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:extra_runs:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:extra_runs:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2ddda</color>
                <color>#f3cac3</color>
                <color>#f5b6ab</color>
                <color>#f6a293</color>
                <color>#f88e7c</color>
                <color>#f97a63</color>
                <color>#fa654b</color>
                <color>#fc5032</color>
                <color>#fd3b19</color>
                <color>#ff2600</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:extra_runs:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:extra_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:extra_runs:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]</cols>
      </table>
      <simple-id uuid='{6E39E2F9-6699-41C3-8FF8-E0FBFB086D87}' />
    </worksheet>
    <worksheet name='Top 10 Bowlers by Dismissals'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <_.fcp.ObjectModelTableType.false...column caption='merged.csv' datatype='integer' name='[__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='merged.csv' datatype='table' name='[__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E]' role='measure' type='quantitative' />
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[dismissal_kind]' derivation='None' name='[none:dismissal_kind:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:bowler:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AA Kazi&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Abdur Razzak&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AC Voges&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AS Raut&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AUK Pathan&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;B Chipli&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;BJ Rohrer&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;C Ganapathy&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;C Munro&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;CK Kapugedera&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DJ Harris&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;F du Plessis&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;FY Fazal&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;I Malhotra&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;K Goel&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;K Upadhyay&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;KAJ Roach&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;KS Williamson&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;LPC Silva&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;LRPL Taylor&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;M Manhas&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;M Vijay&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Mashrafe Mortaza&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MB Parmar&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MG Neser&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;N Rana&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;NJ Rimmington&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;NL McCullum&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;P Prasanth&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RA Shaikh&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RA Tripathi&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RR Bhatkal&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RR Bose&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RS Gavaskar&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RW Price&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Rana&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Sriram&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SA Abbott&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SA Yadav&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SPD Smith&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SR Tendulkar&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Sunny Gupta&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Tejas Baroka&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;V Shankar&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;VS Yeligati&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Y Gnaneswara Rao&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:dismissal_kind:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:dismissal_kind:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:dismissal_kind:nk]' member='%null%' />
                <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;obstructing the field&quot;' />
                <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;retired hurt&quot;' />
                <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;run out&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:dismissal_kind:nk]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' scope='rows' value='Total Dismissals' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]</cols>
      </table>
      <simple-id uuid='{80FCDBC6-12FF-4928-A947-198E0612AEEB}' />
    </worksheet>
    <worksheet name='Top 10 Bowlers by Maiden Overs'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column caption='Maiden Over' datatype='integer' name='[Calculation_5926103838236397575]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF { FIXED [match_id], [bowler], [over] : SUM([total_runs]) } = 0&#10;THEN 1 ELSE 0 END' />
            </column>
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_5926103838236397575]' derivation='Sum' name='[sum:Calculation_5926103838236397575:qk]' pivot='key' type='quantitative' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_5926103838236397575])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:bowler:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:Calculation_5926103838236397575:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:Calculation_5926103838236397575:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:Calculation_5926103838236397575:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:Calculation_5926103838236397575:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]</cols>
      </table>
      <simple-id uuid='{6214B214-D187-4D01-97FA-3F8C3CABF2BA}' />
    </worksheet>
    <worksheet name='Top 10 Bowlers with Most Wide Runs'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
            <column-instance column='[wide_runs]' derivation='Sum' name='[sum:wide_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Wide Runs' datatype='integer' name='[wide_runs]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([wide_runs])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:bowler:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:wide_runs:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:wide_runs:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2ddda</color>
                <color>#f3cac3</color>
                <color>#f5b6ab</color>
                <color>#f6a293</color>
                <color>#f88e7c</color>
                <color>#f97a63</color>
                <color>#fa654b</color>
                <color>#fc5032</color>
                <color>#fd3b19</color>
                <color>#ff2600</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:wide_runs:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:wide_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:wide_runs:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]</cols>
      </table>
      <simple-id uuid='{8A549C61-4C91-4C06-BC32-06A4BD2ACB77}' />
    </worksheet>
    <worksheet name='Top 10 Bowling Performances (Most Wickets in a Match)'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column aggregation='Sum' caption='Wicket' datatype='integer' name='[Calculation_5926103838515953674]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF NOT ISNULL([dismissal_kind]) &#10;   AND [dismissal_kind] &lt;&gt; &quot;run out&quot; &#10;THEN 1 &#10;ELSE 0 &#10;END' />
            </column>
            <column caption='Wickets in match' datatype='integer' name='[Calculation_5926103838516862987]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [match_id], [bowler] : SUM([Calculation_5926103838515953674]) }' />
            </column>
            <column caption='Max Wickets in Match' datatype='integer' name='[Calculation_5926103838517473292]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [match_id] : MAX([Calculation_5926103838516862987]) }' />
            </column>
            <column caption='Top bowler' datatype='integer' name='[Calculation_5926103838517735437]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_5926103838516862987] = [Calculation_5926103838517473292] THEN 1 ELSE 0 END' />
            </column>
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5926103838517473292]' derivation='CountD' name='[ctd:Calculation_5926103838517473292:qk]' pivot='key' type='quantitative' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_5926103838517735437]' derivation='None' name='[none:Calculation_5926103838517735437:ok]' pivot='key' type='ordinal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838517735437:ok]'>
            <groupfilter function='member' level='[none:Calculation_5926103838517735437:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNTD([Calculation_5926103838517473292])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:bowler:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;A Choudhary&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;A Flintoff&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;A Mithun&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;A Nel&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AA Chavan&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AA Jhunjhunwala&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AA Kazi&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AA Noffke&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Abdur Razzak&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AC Gilchrist&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AC Voges&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AF Milne&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AJ Finch&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AL Menaria&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AM Rahane&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AM Salvi&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Ankit Soni&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AS Raut&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;AUK Pathan&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Avesh Khan&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;B Chipli&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;B Geeves&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;B Laughlin&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;B Stanlake&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Basil Thampi&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;BJ Rohrer&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;BMAJ Mendis&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;C Ganapathy&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;C Munro&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;C Nanda&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;CJ McKay&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;CK Kapugedera&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;CL White&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;D Kalyankrishna&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;D Salunkhe&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DB Ravi Teja&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DJ Harris&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DJ Hooda&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DJ Thornely&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DL Chahar&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DNT Zoysa&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DP Vijaykumar&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;F du Plessis&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;FH Edwards&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;FY Fazal&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Gagandeep Singh&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;GH Vihari&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;GJ Maxwell&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;GR Napier&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;GS Sandhu&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Gurkeerat Singh&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Harmeet Singh (2)&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;I Malhotra&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;J Suchith&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;J Syed Mohammad&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;J Yadav&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JD Ryder&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JDS Neesham&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JEC Franklin&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;JW Hastings&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;K Goel&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;K Upadhyay&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;KAJ Roach&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;KJ Abbott&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;KMDN Kulasekara&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;KP Pietersen&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;KS Williamson&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;L Ablish&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;LA Carseldine&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;LH Ferguson&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;LJ Wright&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;LMP Simmons&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;LPC Silva&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;LRPL Taylor&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;M Manhas&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;M Vijay&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Mashrafe Mortaza&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MB Parmar&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MG Neser&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MJ Clarke&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MJ Henry&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;MK Tiwary&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Mohammad Hafeez&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Mohammad Nabi&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;N Rana&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;NB Singh&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;ND Doshi&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;NJ Rimmington&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;NL McCullum&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;P Amarnath&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;P Prasanth&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;P Suyal&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Parvez Rasool&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;PD Collingwood&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;PM Sarvesh Kumar&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;R McLaren&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;R Sathish&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;R Shukla&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RA Shaikh&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RA Tripathi&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RD Chahar&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RG More&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RN ten Doeschate&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RR Bhatkal&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RR Bose&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RR Raje&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RS Gavaskar&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RW Price&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Rana&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Sriram&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;S Vidyut&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SA Abbott&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SA Yadav&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Sachin Baby&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SB Joshi&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Shivam Sharma&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Shoaib Malik&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SPD Smith&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SR Tendulkar&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SS Agarwal&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SS Sarkar&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Sunny Gupta&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Swapnil Singh&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;T Henderson&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;T Natarajan&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Tejas Baroka&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;TL Suman&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;TM Head&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;TP Sudhindra&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;TS Mills&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;V Shankar&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;VS Yeligati&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;WA Mota&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Y Gnaneswara Rao&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Y Nagar&quot;' />
                    <groupfilter function='member' level='[none:bowler:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838517473292:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838517735437:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838517473292:qk]' scope='rows' value='No of wickets' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838517473292:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838517473292:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838517473292:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]</cols>
      </table>
      <simple-id uuid='{8CDD03A9-C7EA-4C83-B5DD-8312A9A58513}' />
    </worksheet>
    <worksheet name='Top 10 Highest Individual Scores in a Single Match'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column aggregation='CountD' caption='Batsman match id' datatype='string' name='[Calculation_5926103838546599958]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[batsman] + &quot; (Match &quot; + STR([match_id]) + &quot;)&quot;' />
            </column>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_5926103838546599958]' derivation='None' name='[none:Calculation_5926103838546599958:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838546599958:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([batsman_runs])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Calculation_5926103838546599958:nk]' />
                  <groupfilter function='member' level='[none:Calculation_5926103838546599958:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838546599958:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:batsman_runs:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838546599958:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:batsman_runs:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:batsman_runs:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838546599958:nk]</cols>
      </table>
      <simple-id uuid='{77FD2094-9DFD-4207-8398-1BA49FE9EEBF}' />
    </worksheet>
    <worksheet name='Top 10 Players by Man of the Match Awards'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column aggregation='CountD' caption='Unique Matches' datatype='string' name='[Calculation_5926103838203576320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([match_id])' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='merged.csv' datatype='integer' name='[__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='merged.csv' datatype='table' name='[__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_5926103838203576320]' derivation='CountD' name='[ctd:Calculation_5926103838203576320:qk]' pivot='key' type='quantitative' />
            <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
            <column-instance column='[player_of_match]' derivation='None' name='[none:player_of_match:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:player_of_match:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNTD([Calculation_5926103838203576320])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:player_of_match:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:player_of_match:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:player_of_match:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' scope='rows' value='No of Awards' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:player_of_match:nk]</cols>
      </table>
      <simple-id uuid='{426B04D1-9FD3-464D-AE4A-2507613C0118}' />
    </worksheet>
    <worksheet name='Top 10 Run Scorers'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:batsman:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([batsman_runs])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:batsman:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:batsman:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:batsman_runs:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:batsman:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:batsman_runs:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:batsman_runs:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:batsman:nk]</cols>
      </table>
      <simple-id uuid='{F964A733-DDB8-4CE2-A1B9-63C1DCB7EDE6}' />
    </worksheet>
    <worksheet name='Top 10 Umpires by Matches Officiated'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column aggregation='CountD' caption='Unique Matches' datatype='string' name='[Calculation_5926103838203576320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([match_id])' />
            </column>
            <column caption='Umpire' datatype='string' name='[Calculation_5926103838509174792]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [umpire1] = [umpire1] THEN [umpire1]&#10;ELSEIF [umpire2] = [umpire2] THEN [umpire2]&#10;END' />
            </column>
            <column-instance column='[Calculation_5926103838203576320]' derivation='CountD' name='[ctd:Calculation_5926103838203576320:qk]' pivot='key' type='quantitative' />
            <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_5926103838509174792]' derivation='None' name='[none:Calculation_5926103838509174792:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
            <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
            <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838509174792:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNTD([Calculation_5926103838203576320])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Calculation_5926103838509174792:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838509174792:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838509174792:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' scope='rows' value='Matches Officiated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838509174792:nk]</cols>
      </table>
      <simple-id uuid='{DA763CAB-1B4B-466D-96E4-13D32799D439}' />
    </worksheet>
    <worksheet name='Total Bowled Wickets by Teams'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column caption='All Teams' datatype='string' name='[Calculation_5926103838215462916]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [team1] = [team1] THEN [team1]&#10;ELSEIF [team2] = [team2] THEN [team2]&#10;END' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='merged.csv' datatype='integer' name='[__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='merged.csv' datatype='table' name='[__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E]' role='measure' type='quantitative' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5926103838215462916]' derivation='None' name='[none:Calculation_5926103838215462916:nk]' pivot='key' type='nominal' />
            <column-instance column='[dismissal_kind]' derivation='None' name='[none:dismissal_kind:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:dismissal_kind:nk]'>
            <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;bowled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838215462916:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:dismissal_kind:nk]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' scope='rows' value='No of catches' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838215462916:nk]</cols>
      </table>
      <simple-id uuid='{5C3799DA-1CA7-4C4F-AB30-C5935C1EF4B0}' />
    </worksheet>
    <worksheet name='Total Catches by Teams'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column caption='All Teams' datatype='string' name='[Calculation_5926103838215462916]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [team1] = [team1] THEN [team1]&#10;ELSEIF [team2] = [team2] THEN [team2]&#10;END' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='merged.csv' datatype='integer' name='[__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='merged.csv' datatype='table' name='[__tableau_internal_object_id__].[merged.csv_375F11187EC04B8EBB108A09EE295F1E]' role='measure' type='quantitative' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5926103838215462916]' derivation='None' name='[none:Calculation_5926103838215462916:nk]' pivot='key' type='nominal' />
            <column-instance column='[dismissal_kind]' derivation='None' name='[none:dismissal_kind:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:dismissal_kind:nk]'>
            <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;caught&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838215462916:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:dismissal_kind:nk]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' scope='rows' value='No of catches' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[__tableau_internal_object_id__].[cnt:merged.csv_375F11187EC04B8EBB108A09EE295F1E:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838215462916:nk]</cols>
      </table>
      <simple-id uuid='{EF3C7031-31FD-4A82-8EB2-AA6434AA5FD5}' />
    </worksheet>
    <worksheet name='Total Dismissals per Season'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column-instance column='[player_dismissed]' derivation='Count' name='[cnt:player_dismissed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[cnt:player_dismissed:qk]' scope='rows' value='No of Player Dismissed' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[cnt:player_dismissed:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[cnt:player_dismissed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[cnt:player_dismissed:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</cols>
      </table>
      <simple-id uuid='{5D66B8E7-E85E-48CF-B73C-4E355C6ECB55}' />
    </worksheet>
    <worksheet name='Total Runs Scored by Teams'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column caption='All Teams' datatype='string' name='[Calculation_5926103838215462916]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [team1] = [team1] THEN [team1]&#10;ELSEIF [team2] = [team2] THEN [team2]&#10;END' />
            </column>
            <column-instance column='[Calculation_5926103838215462916]' derivation='None' name='[none:Calculation_5926103838215462916:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
            <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838215462916:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:total_runs:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:total_runs:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:total_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:total_runs:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838215462916:nk]</cols>
      </table>
      <simple-id uuid='{A2473A6A-AF2A-44FC-BEF2-9ECB52DDD289}' />
    </worksheet>
    <worksheet name='Total Runs Scored per Season'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
            <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:total_runs:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:total_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:total_runs:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</cols>
      </table>
      <simple-id uuid='{AF9B4161-1E40-466A-A716-6A1F94F49EBD}' />
    </worksheet>
    <worksheet name='Total Runs in 1st Innings per Season'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column caption='Inning' datatype='integer' name='[inning]' role='measure' type='quantitative' />
            <column-instance column='[inning]' derivation='None' name='[none:inning:ok]' pivot='key' type='ordinal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
            <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:inning:ok]'>
            <groupfilter function='member' level='[none:inning:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:total_runs:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:inning:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:total_runs:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:total_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:total_runs:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</cols>
      </table>
      <simple-id uuid='{64353DE3-B800-4D91-ABCB-0B04906959FF}' />
    </worksheet>
    <worksheet name='Total Runs in 2nd Innings per Season'>
      <table>
        <view>
          <datasources>
            <datasource caption='merged' name='federated.0xrptt712xxyiz1cly71b0lpe2l9' />
          </datasources>
          <datasource-dependencies datasource='federated.0xrptt712xxyiz1cly71b0lpe2l9'>
            <column caption='Inning' datatype='integer' name='[inning]' role='measure' type='quantitative' />
            <column-instance column='[inning]' derivation='None' name='[none:inning:ok]' pivot='key' type='ordinal' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
            <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:inning:ok]'>
            <groupfilter function='member' level='[none:inning:ok]' member='2' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:total_runs:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</column>
            <column>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:inning:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:total_runs:qk]' />
              <text column='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:total_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:total_runs:qk]</rows>
        <cols>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</cols>
      </table>
      <simple-id uuid='{70BF50FE-450E-4111-9AEB-FF80A8680076}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Teams That Won Both Toss and Match'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838210154498:ok]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:toss_winner:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2BA318E-7C3C-4D81-B027-AE2A8E00ABB0}' />
    </window>
    <window class='worksheet' name='Teams That Won Toss but Lost Match'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838210154498:ok]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:toss_winner:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4FFD61DD-D231-4A7F-90B1-206337023F0E}' />
    </window>
    <window class='worksheet' name='Total Catches by Teams'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838215462916:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:dismissal_kind:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC8D4015-AFB9-44F1-8F77-A52F110C58C0}' />
    </window>
    <window class='worksheet' name='Total Bowled Wickets by Teams'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838215462916:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:dismissal_kind:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{457B6398-BF6B-4C20-95B5-F9D684EC432D}' />
    </window>
    <window class='worksheet' name='Total Runs Scored by Teams'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838215462916:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2D00501C-0381-4A21-BF15-AF4471F0E73D}' />
    </window>
    <window class='worksheet' name='Top 10 Run Scorers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:batsman:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8C480308-0DCA-4042-82EB-C397E3CF8A98}' />
    </window>
    <window class='worksheet' name='Top 10 Bowlers Who Conceded Most Extras'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E09E1885-0A89-4FBE-A1F8-064A87393102}' />
    </window>
    <window class='worksheet' name='Top 10 Bowlers by Dismissals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:dismissal_kind:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{547522E4-150E-468A-BAE3-4878D64AF54D}' />
    </window>
    <window class='worksheet' name='Top 10 Players by Man of the Match Awards'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:player_of_match:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D84B27ED-3C87-44E6-A804-6CE287C5B2B4}' />
    </window>
    <window class='worksheet' name='Top 10 Bowlers with Most Wide Runs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD7AC79A-BC29-4F75-9DE7-45637D9FB582}' />
    </window>
    <window class='worksheet' name='Result Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838203576320:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:match_id:ok]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:result:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{63F19A05-9470-4652-BADD-E69BBA58DFA0}' />
    </window>
    <window class='worksheet' name='Number of Matches Affected by DL Method (per Team)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838215462916:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:dl_applied:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7860ABA4-2B06-44D5-9668-D00E8358DBAA}' />
    </window>
    <window class='worksheet' name='Matches Won by Runs (per Team)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838215462916:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4075C7A4-1624-487A-8865-78838C456F9C}' />
    </window>
    <window class='worksheet' name='Matches Won by Wickets (per Team)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838215462916:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F33EC770-8587-4BDB-B749-809BF060C0B1}' />
    </window>
    <window class='worksheet' name='Top 10 Bowlers by Maiden Overs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838203576320:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:match_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B851A69F-9653-45A5-9CF9-AE19B72C85E6}' />
    </window>
    <window class='worksheet' name='Top 10 Batsmen Most Dismissed by Catches'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:batsman:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:dismissal_kind:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A14BD885-E812-49E1-A6F1-EC48C119DD40}' />
    </window>
    <window class='worksheet' name='Running Total of Each Match'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:inning:ok]' type='filter' />
            <card mode='radiolist' param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838203576320:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838203576320:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838215462916:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:batting_team:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:inning:qk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:inning:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F47A5DC-AFF8-4584-8CB8-2B71CBD89E3A}' />
    </window>
    <window class='worksheet' name='Players Retired Hurt'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:batsman:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:dismissal_kind:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF026739-2C9A-42F2-BC84-3878184B4944}' />
    </window>
    <window class='worksheet' name='Total Runs Scored per Season'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CF61CBDD-AB83-4C64-852B-83E6FB5B42E8}' />
    </window>
    <window class='worksheet' name='Total Dismissals per Season'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[cnt:player_dismissed:qk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:player_dismissed:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E77D9A7A-D522-440B-A79C-2AF92142F707}' />
    </window>
    <window class='worksheet' name='Top 10 Umpires by Matches Officiated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838509174792:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{586AD501-C316-4185-A123-8E85F5FE7AE5}' />
    </window>
    <window class='worksheet' name='Total Runs in 1st Innings per Season'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838203576320:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:inning:qk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7BACB092-F4F7-413A-B120-0B1779139655}' />
    </window>
    <window class='worksheet' name='Total Runs in 2nd Innings per Season'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838203576320:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:inning:qk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6DB9946C-D22D-4C49-897F-72C88AA707B2}' />
    </window>
    <window class='worksheet' name='Normal Result Matches per Season'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838203576320:qk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:result:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{74225BB1-7DD6-479F-84F5-FA3872132E1F}' />
    </window>
    <window class='worksheet' name='Top 10 Highest Individual Scores in a Single Match'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838546599958:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:batsman:nk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[sum:batsman_runs:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AD6FCA27-03AD-474B-82FD-A6A1B2282059}' />
    </window>
    <window class='worksheet' maximized='true' name='Top 10 Bowling Performances (Most Wickets in a Match)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:season:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[ctd:Calculation_5926103838517473292:qk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:Calculation_5926103838517735437:qk]</field>
            <field>[federated.0xrptt712xxyiz1cly71b0lpe2l9].[none:bowler:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{41990E19-076D-43A3-AC69-28C2D57FEEA2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Matches Won by Runs (per Team)' width='384'>
      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
      aPbs2XrnnXfkOI66u7sT49/4m988h278DUzTHDef2tvbExlvndOhUEhtbW0aGxtLKVt3d7cK
      Cwv11ltvyXEchUKhxPvGjb/fzePe/P4xPDysWCwmwzD029/+VtL4eWC8+OKLL07y+Zuwy5cv
      y+v1qrq6Ws3NzZo2bZpKS0vV0tKi0tJSHT16VGfOnNH06dP1zjvvaNasWWpqalJBQYEikYgu
      Xbqk4uJiBYNBOY6jI0eOqKCgQCMjIyotLVU0GtXAwICuXr2qjo4OXblyRTNnztSOHTtUVlam
      YDCoefPm6cKFC/J4PIrFYvrDH/6gefPm6Te/+Y1mzpyp1tZWnT17VsXFxQqHwyotLR33GI4c
      OaKPfOQjys/P1/Tp09XY2KiSkhIdPXpUeXl56uzsVEtLiyoqKvTWW2+psrJSx44dUyQSGZep
      s7NTpmnq1KlTCgQCicfg8Xh06NAhVVZWatasWdq3b59qamr0hz/8QYZh6N13302UydGjR1VR
      UaFjx45peHhYBw4c0KxZs+54Et7Jkyd14sQJPfnkkwoEAjp8+LAMw9CRI0dkmqai0agOHz6s
      4uJiHT58WPF4XP39/RodHVVlZaU8Ho/mzJmjf//3f9dzzz2nvLw8tbS0qLa2VpIS/29tbZXP
      51M8Hk+UeWNjo3w+nxobG1VXV6fDhw+rqKhIoVBI+/bt09KlS3Xw4EFVVVXp5MmTqqmped/8
      N0rItm319vZqdHRUNTU1unz5snp7e1VeXq7W1laFQiF1d3dreHhYXq9XpaWl6ujoSDzvNTU1
      ikQiamhokGEYWrNmjX73u9/dljUQCOjYsWMaGxvTyMiI2traEn/zOXPm6Pz586qqqlJJSfJH
      1Fy7dk22bcvj8Sgajaqvr0/hcFhnz57VtGnTdPr0ac2YMUMnT56U4ziyLEv79+9XbW2trl27
      prlz5+rcuXNatGiRysrKlJ+fr1OnTiWyL1q0SC0tLWpvb5fH49HAwIBqamrU2tp6x+d3IgzD
      0KFDh1RQUKDq6mrt379/3Fy9eW41Njbq8uXLuu+++3Ty5El1dHTI5/NpZGREQ0ND4143P/nJ
      TxQIBBJzaWRkRGVlZWnJLF1/k71w4YKqqqoSRXD16lU1NTWNm4PNzc2JOXT8+HGVlpYqFoup
      u7s7MZ+OHDmiysrKxM9vntM/+9nPNHfuXJ04cUL3339/0tmuXLmiBx98UCMjI/L7/dq/f7/y
      8vIUDAYViURUU1Ojffv2Jca9+T3wxsJmXV2d2traNG/ePLW2tibmQdZ3Ai9dulTHjh1TUVHR
      HX9eWFiouro6LViwQEuXLtX06dMTv7dq1SoFg0F1dnYqGAy+72rnqlWrVFNTo2g0quLiYi1c
      uFAFBf93qGFvb6+6u7sVDocT919XV6dYLKbly5erpaUl0eQ3CwQC45ZIysvL9cADD6i4uDix
      hOD3+xUOh3XfffdpyZIlys/PH5fpxtJEf3//baug1dXVevrpp3XlyhVdunTptvGXLFmihx9+
      WMFgMPEYbiyxbNq0Sffdd98dn4/8/HwtXrz4tiXAFStWaNGiRYrFYsrLy9PixYtVUlKi+++/
      X4ODg+M283R3d2vOnDnq6em57f4HBgZ04sQJffjDH77tKIbCwkKtWLFi3Iu4v79fXV1diTWX
      efPmacmSJe+5BnBz/s7OTq1evVoPPfRQYq1Qur4JJxwOKxAIqLOzU9FoVIODg6qsrFRNTY2K
      ioru+LwvXLhQQ0NDsizrjlnb29tVX1+v+fPnSxr/Ny8vL1dlZaXmzZt3x9zvp729XXv27NG6
      devU39+vVatW6cEHH9To6KiGh4d14sQJrV69Wj09PYm1j5sFAoHE/L31eY5EIurq6lI8Hk9s
      Hki3mTNn6tOf/rRs21ZjY+NtP795bgUCAW3dujVRksuXL1dHR4f6+/tve90sXbpU69atG3eb
      dOvv79d///d/6yMf+UhiCds0TYVCIUnX165vnkMPPPCAWlpaFIlEEvOpuLg48RqfPn36bXO6
      trZWixcvnvBJseFwWCMjI4rFYhoZGRm3qfDmcd+LaZoaHR0dNw/+P4VKlexCCXrYAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Matches Won by Wickets (per Team)' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3daXAc9YE28GemZzTSSB4JCx2+sZAl+b7wxjZZ21u+KLKQBFiOUJvdKpJi
      X/JuZUltpTb5sMVWZYvag7zsLskLeF+yRREoEigCwVyyhaTAYGPLhyzbyJJ1jTWa0TGa++rr
      /eDyxMI2zNjdmhn+z++LLWs8/2d6uvuZPqbbouu6DiIiEo413wGIiCg/WABERIJiARARCYoF
      QEQkKBYAEZGgWABERIJiARARfc6LL74Ir9eLgwcPYt++fVBVFU8//TQOHDiA8+fP5zueYWz5
      DkBEVGjq6+vR3d2Ns2fPQpZlDA4OoqKiAjabDXa7Hb/4xS8QDAZRWVmJnTt34vXXX0coFMJj
      jz2GkZERuN1urFq1CjfddBM8Hg8sFgsefPDBfL+sK3ALgIjoc9auXYtTp05B0zQ4nU4cOXIE
      a9euhdfrRTQahdfrxU9/+lN4vV5MT09j3bp1uOuuu/DZZ5/hlVdewZYtW/D222/D7/fD7/fj
      L/7iL/L9kq6KBUBE9Dl1dXUYGhqCy+XC8uXL8cYbb2DVqlWZ31utVlgsFlit1szPkiQBAEpK
      SlBRUZH5xL9jx47M7wqN9MQTTzyR7xBERIVGkiRs2rQJDQ0NKCkpwfr16wFcLIfy8nIsXboU
      ALB06VJUVlZi7ty5qKysxO233462tjY4nU40NTWhpqYGFRUV+Xwp12ThtYCIiMTEXUBERIKa
      1bOAVFWFpmmZny0Wy2wOT0REl8nbLiBVVQv2wAgRkQgM3wV0/PhxdHV1IRAIQJZluN1u+P1+
      o4chIqIbZGgBxGIxTE9Po7GxERUVFWhra8OKFSvgdrtn7PohIqL8M7QAgsEgAoEAjh07Bl3X
      YbVaUVVVhUWLFiEUChk5FBER3SBDDwIvWLAA9913H8LhMD7++GNcOryQTCZRUlJi5FBERHSD
      DC2AkZERnDt3Dul0Gk1NTQiFQmhra0M4HEZ5ebmRQxER0Q0y/CwgRVGg6zrsdjuAi5/+HQ7H
      Fad88iwgIqL84mmgRESC4jeBiYgExQIgIhIUC4CISFAsACIiQbEAiIgExQIgIhIUC4CISFAs
      ACIiQbEAiIgExQIgIhIUC4CISFAsACIiQX2lCiCVSuHAgQMAAL/fj3379qGnpyfPqYiICtNX
      qgD27duHtrY26LqO//iP/8B3vvMd1NTU5DsWEVFB+soUQE9PD+rq6lBTU4Px8XF4PB4899xz
      6Ovry3c0IqKC9JUpgGeffRZTU1Nwu904c+YMtm/fjh/96Efo6OjIdzQiooJk6C0h8+mZZ54B
      ACQSCfzZn/0ZOjo68Ktf/QoVFRV5TkZEVJi+sncE03UdwWAQVVVVV9yOkoiIvsIFQEREX+wr
      cwyAiIhyU3DHAFY++LN8R8h47L5t+MF92/Idg4jIFNwCICISFAuAiEhQLAAiIkGxAIiIBGVK
      AfT09EDXdQQCAXR1deH48eNmDENERDfA8ALo7e1FZ2cnAODEiRNoaGhAQ0OD0cMQEdENMvQ0
      0HQ6jcHBQTQ1NQG4+GWvY8eOoaamBmvWrIGqqtA0LfM7RVGMHN5wqqIglUrNylgnTpzASy+9
      hH//938HAPzkJz/BPffcg02bNs3K+EQkHkMLwO12AwAGBgZQX1+P3bt3AwBaW1sRi8VQXl6e
      +fav1Wot+G8CSzYbHA6H6ePIsozW1lY0NDTA4XDgzTffxKpVqyDL8qyMT0RiMnQX0I4dO3DH
      HXegoaEBK1euhNvtxh/+8AdMT0+jrKzMyKG+Uvbt24e//Mu/hKqqmJycRF9fH1avXl3wW0hE
      VNxM+Sbwrl27AABbt25FKpVCSUkJL8j2Berr63Hw4EEcPXoUzc3NmDt3Lvbv3w9ZljNbUURE
      RjP9UhDchfHl7rnnHgDA8uXLsWXLFgDA2NgYkslkPmMR0VdcwV0LSGSXVv4AMG/evDwmISIR
      8ItgRESC4haAgZ574+N8R8jY2LIIty1fnO8YRFTAWAAGeu537nxHyHj0W1tZAET0hbgLiIhI
      UCwAIiJBsQCIiATFAiAiEhQLgIhIUCwAumGpVAoHDhwAcPFeEC+88AJ8Pl+eUxHRl2EB0A3b
      t28f2traoCgKTp8+jT//8z/H888/n+9YRPQlWAB0Q3p6elBXV4eamhrYbDY88MADaG9vR0tL
      S76jEdGXYAHQDXn22WcxNTUFt9uNkydP4t/+7d9QX1+P+++/P9/RiOhL8JvAdEOeeeYZAEAi
      kcDixYvR0dGBsrIyTE5OZq5ySkSFiQVAhnj88ccBAG+//XaekxBRtrgLiIhIUCwAIiJBcRcQ
      AQA2f/8/8x0h43t3fQ3fu/trszJWJBLBAw88gP3798PtduOXv/wlfv3rX8/K2ET5xi0AEtpz
      zz2XuRPbkiVLsGnTpjwnIpo9LAAS1scff4yWlhaUlZVBURQsXLgw35GIZhULgIRlsVgwPj6O
      rq4ufPjhh/mOQzTreAyAhLV161Zs3boVK1aswNe+9jW8/vrr0DQNzz//PB5++GGUl5fnOyKR
      qVgAJLzNmzcDAO699948JyGaXdwFREQkKG4BUNE7dm4Ux8+N5jsGAGBe9RzcuWV5vmMQZYUF
      QEXv+LlRvPD2kXzHAACsb5rPAqCiwV1ARESCYgEQEQmKBUBEJChTCqCnpwe6rkOWZbjdbvj9
      fjOGISKiG2B4AfT29qKzsxMA0NbWhhUrVsDtdkPTNKOHIiKiG2DoWUDpdBqDg4NoamoCAFit
      VlRVVWHRokUIhUJwuVyZIlBVFYqiGDm84VRFQSqVyneM66KoahFnz226q4pqYprcaJpetNOd
      xGNoAbjdbgDAwMAA6uvroes6ACCZTKKkpASSJEGSJAAXy+HS3wuVZLPB4XDkO8Z1sUlSEWfP
      bbpLtsKZj6xWS9FOdxKPoQWwY8cOAMCBAwewcuVKpFIptLW1IRwO87oqREQFxpQvgu3atQsA
      sHHjRiSTSX4iIiIqQKZ/E7i0tNTsIYiI6DrwewBERIJiARARCYoFQFSEYrEYXn31Vbz66quQ
      ZRkjIyP47//+b/T29uY7GhURFgBREQoGg9iyZQtWrFiBl156Cc8//zwefPBB/OpXv8p3NCoi
      LACiIrRgwQK43W48//zz2L17N+rq6vCv//qvqKioyHc0KiIsAKIi9e1vfxv33HMP2traEAgE
      8MQTT0DX9YL/hj0VDt4QhqgIHTp0CF1dXVAUBUuXLoWqqnjxxRcRDAYL/hv2VDhYAERFaPPm
      zVizZg0sFgvKyspw9913IxwO46/+6q9gsVjyHY+KBAuAqEg5nc4ZP7tcrjwloWLFYwBERILi
      FgBRHj3+zDs42e/LdwwAwNrGevyf/31nvmPQLOIWABGRoFgARESCYgEQEQmKBUBEJCgWABGR
      oFgARDTrfD4fxsbGMj+PjIxgamoqj4nExNNAiWhW9fX14dChQ4jH45g/fz7C4TAsFgsqKyvx
      jW98I9/xhMItACKaVcuWLcPmzZuhKArq6+tx6tQp6LqOxYsX5zuacFgARDTrJiYmoGkaYrEY
      VFXF3r178fLLLyOVSuU7mlBYAEQ0q06cOIGKigps3rwZZ86cwdy5czExMQFJkngl01nGYwBE
      NKtaWlrQ0dEBm82GRx99FJqm4b333sMjjzwCm42rpNnEqU1Es6q0tBR79+7N/CxJEu666648
      JhIXdwEREQmKWwBEdF3+71tHMeCdzncMAEDD/Jvwv+6+Ld8xig4LgIiuy4B3Gt0D/nzHoBvA
      XUBERIJiARARCYoFQEQkKMOPAYRCIQBAZWUlFEVBIpGAxWJBRUWF0UMREdENMLQAxsfHMTAw
      gHQ6jaqqKgSDQTgcDkiShNtu4xF6IqJCYmgB1NbWQtd1nD17Fi6XC8PDw1iyZEnmIk+apkHX
      dQCALMtQFMXI4Q2nKkrRXptEUdUizp7bdFcV1cQ0udE0PafsmqaZmCY3mqYJk50uMnwXUDQa
      haZpSKfT2LlzJ2KxGFpbW3H33XfDbrdnHme32wv+uh+SzQaHw5HvGNfFJklFnD236S7ZCmc+
      slotOWW3WgvnMJzVahUmO11kaAF4PB44HA40NDRgaGgIiUQC9fX1kCQJFotlxgyjqoXzqY2I
      SESGVnh9fT1CoRCSySS2bduGxsZGjI+PY/v27SgpKTFyKCIiukGGbgHY7XasXLky83N5eTlW
      r15t5BBERGSQwtmJR0REs4oFQEQkKBYAEVEOUqkU+vr6kE6nAQA+nw9jY2N5TnV9eDVQIqIc
      vPbaa6iqqsIvf/lLPPbYYzh06BDi8Tjmz59fdDe24RYAEVEOvvnNb6K8vBy1tbVYtmwZNm/e
      DEVRUF9fn+9oOWMBEBHlIJlMwu/3Q1VV6LqOiYkJaJqGWCyW72g5YwEQEeXA7XZj8+bNCAaD
      OHbsGCoqKrB582acOXMm39FyxgIgIspBS0sLjh8/jh/+8IdYuXIlxsbGEA6H8eijj+Y7Ws54
      EJiIKAdNTU1oamrK/Lx37948prkx3AIgIhIUtwCISDgDviD+33vd+Y6R8cgda9BQXzXr47IA
      iEg4saSMnqHJfMfIiCXlvIzLXUBERIJiARARCYoFQEQkKBYAEZGgWABERIJiARARCYoFQEQk
      KBYAEZGgWABERIJiARARCYoFQEQkKBYAEZGgWABERILKqgCe+vlTZucgIqJZllUBnDt3zuwc
      REQ0y3LaBcQtASKir46cCuDSlkDvuV5TwhAR0ey5roPAP//5z6/5u1AohFAolPl5cnISiqJc
      zzBERGSirG4J+aMf/eiqf37e+Pg4BgYGkE6nUVVVhVgsBkmS4PF4cO+99xoUmYiIjJBVATQ3
      NV/1z8+rra2Frus4e/YsXC4XfD4f9uzZA1VVEYlEUF5eDl3XAQCyLBf8loGqKEilUvmOcV0U
      VS3i7LlNd1VRTUyTG03Tc8quaZqJaXKjaZow2WU5P/fgvRZZlvOyvBp+U/hoNApN05BOp2Gx
      WAAAkiRBVWcupHa7HZIkGT28oSSbDQ6HI98xrotNkoo4e27TXbIVznxktVpyym61Fs5XcaxW
      qzDZ7Xa7iWlyZ7fb87K8Zv0OJpNJdHR04He/+x2eeuqpK1boAODxeOBwONDQ0ACv1wur1QqP
      xwOPx4PKykpYrVZIklTwK34iIhFkXQATExMIhUIYGhpCQ0MDpqenr3hMfX09QqEQkskktm3b
      hh07dmB6eho7d+7MbA0QEVFhyHoX0MKFC3HgwAHs3bsXPp8P1dXVVzzGbrdj5cqVM/5tzZo1
      N56SiIgMl/UWwPT0NJYsWYLly5cjlUrNONWTiIiKT1ZbALqu47/+678wNjaGrq4uJBIJ7Ny5
      0+xsRERkoqwKwGKx4Mc//jE8Hg+qq6tRWlpacEfRiYgoN1kfA5BlGa+99hqcTiduuukmPPDA
      AygtLTUzGxERmSjrAggGg1i2bBk0TcPY2BhkWWYBEBEVsawPAi9evBg333wzLly4gA0bNqCi
      osLMXEREZLKsCyAcDuPChQv4wQ9+gK6uroK/jAMREX2xrAvA5XLhT/7kT/D444/j/vvv50Fg
      IqIil9UxgKNHj6KzsxMAsGTJErz66qv427/9W5YAEVERy6oAbrvtNjQ3N+P06dPYvHkz2tvb
      TY5FRERmy+kYQH9/PwDg7NmzSCQSpoUiIiLzZV0ACxYsgMvlwpNPPonGxka4XC4zcxERkcmy
      2gU0NDQEWZYRj8exdOlSTE1NQVEU2GyG306AiIhmSVZr8Orqamiahi1btmT+rZBuBkFERLnL
      qgBCoRBeeuklOBwONDc3Y+3atby+PxFRkcvqY/zChQvxD//wD3jooYcwNDSExx57DOl02uxs
      RERkoqwKYGBgAN///vfxwQcfYO/evXjjjTeK9n6zRER0UVYFsGTJEvz93/89nE4nOjo68Itf
      /IKXgiAiKnJZHQOIxWI4ceIEBgYGAAA333wzjwEQERW5rO8Itm7dOtx3332QJMnsTERENAuy
      KoDKykpUVlaanYWIiGZR1ifzRyIR/Mu//AveffddJJNJMzMREdEsyLoA5syZgx//+MeIx+N4
      6KGH8Oyzz/JUUCKiIpbTxeCeeOIJAMCvf/1rbN++HcPDw2blIiIik2V9MZ85c+bgjjvuwNmz
      Z+HxeLB8+XIzcxERkcmy3gIYHR3F4cOHceedd+I3v/kNjwMQERW5rK8GeurUKUSjUXR3d8Nq
      tfJicERERS6rAnA6nVi0aBEWLVoEAPjGN77B7wMQERW5rAqgtrYWtbW1ZmchIqJZlPVBYEVR
      8PLLLyMejwMAHnnkEd4UnoioiGVdAKOjowCA73znOxf/41XuBpZIJOB2u5FKpbBlyxYEg0EM
      DAxAkiTs2LHDmMRERGSIrAuguroahw4dQiwWAwB873vfu2ILIJ1O4/bbbwcAuN1uaJqGnTt3
      8sJxREQFKOsCcDqd+Od//mf4/X7MmzfvqlsAlZWVmJqaQnt7O/bu3YuzZ8+ira0Nqqpi9+7d
      0DQNmqYBAFRVLfhLSquKglQqle8Y10VR1SLOntt0VxXVxDS50TQ9p+yXlodCoGmaMNllWTYx
      Te5kWc7L8pp1ASQSCTz99NNYtmwZzp8/j5/+9KdXbAFEIhG0t7fjW9/6FiRJwsaNG2G1WtHZ
      2YlYLIaKiorM2UNWq7XgzySSbLaivfGNTZKKOHtu012yFc58ZLVacspeSKdTW61WYbIX2vFL
      u92el+U16wIYGxvD2rVrcc899+DFF19EIBBAXV3djMd4vV44HA50dnbilltugd/vRzQahaZp
      KC8vNzw8ERFdv6wL4NZbb8WhQ4fw5JNPYtmyZVes/AGgubkZzc3NmZ+XLl1qTEoiIjJc1gUQ
      jUYxNTWFLVu2YNOmTWZmIiKiWZDT5aD/5m/+BmNjY/jud7/LS0ETERW5rAsgGAzir//6r2Gz
      2fDKK6+gpKTEzFxERGSyrAugqqoKL7zwAhRFwXe/+92iPcWQiIguyumWkE8//TRKSkrw1FNP
      Fe0phkREdFFON4T5yU9+YmYWIiKaRVlvAei6Dr/fD6/Xi66uLjMzERHRLMjpi2BHjx5Ff38/
      HA4HGhsbUVlZaWY2IiIyUdZbAC6XC5988glqa2tRWlrKs4CIiIpc1lsAFRUV+OEPf4ipqSmU
      lZWhrKzMzFxERGSyrAtgYmICL7/8MioqKlBeXo66ujpe34eIqIhlvQtI0zSUlZVBURScP3++
      oK4ESEREuct6LV5XV4fdu3ejvr4eDz/8MHcBEREVuawLIBQK4X/+53/Q39+P119/veBuqEBE
      RLnJ+hhAOp3GunXrcN9995mZh4iIZklWBXDkyBG0t7cjGAxicHAQAPB3f/d3BXdXHSIiyl5W
      BbBp0yasXr0a586dw5o1a3D06NGCv50jERF9sayPAfh8Ppw/fx4A0NPTg3A4bFooIiIyX9YF
      sGTJEgQCATz55JMoKSlBVVWVmbmIiMhkWR8EjkQiWL9+PTZs2IBPP/0UsViMXwQjIipiWRWA
      ruvYt28fPB4PDh8+jP7+fvzsZz8zOxsREZko6y2Ahx9+GIODg1i9ejXKysp4EJiIqMhlVQAW
      iwXV1dV48cUX8dZbb8FiseCf/umfeBooEVERy+l+AKtWrUIsFoPFYkE8Huf9AIiIiljWZwHN
      mzcPlZWVkCQJn332GUpLS83MRUREJstqCyASieD06dOQJAnz58/H/PnzYbNlvfFAREQFKKst
      AL/fj2eeeQbHjx9HPB5HIpEwOxcREZksqwJobGzECy+8gHXr1sHj8eDcuXPQdd3sbEREZKKs
      9uNomobe3l6cPXsW6XQaCxYs4A1hiIiKXFZr8Z6eHvzjP/4jpqenoSgKhoeHoaqq2dmIiMhE
      WW0BrFq1Cq+88srM/3iNg8DJZBKJRAI33XQTAGBychJVVVU8aExEVGCyWitbrdasTvv0+Xw4
      ffo0HA4HysrKkE6nIUkSPB4P7r333hsOS0RExjH0Y3l9fT3q6+vR3d0Ni8WCqakp7NmzB6qq
      IhKJoLy8PHPwWJZlKIpi5PCGUxUFqVQq3zGui6KqRZw9t+muKoWzO1LT9Jyya5pmYprcaJom
      TPZCu6WtLMt5WV4NLQBd19Ha2op58+Zh9erV8Pl8AABJkq44ZmC32wv+ekKSzQaHw5HvGNfF
      JklFnD236S7ZCmc+slotOWUvpJMprFarMNkL7TI2drs9L8uroe9gf38/rFYr5s6di3A4DKvV
      Co/HA4/Hg8rKSlitVkiSVPArfiIiERhaAHV1dVi0aBGi0SjS6TR27NiB6elp7Ny5ExaLxcih
      iIjoBhm6C8jlcsHlcs34tzVr1hg5BBERGaRwduIREdGsYgEQEQmKBUBEJJBIJJL5OwuAiEgQ
      v/3tb/HQQw8BALq6uow9CExERIXr3nvvxejoKADA6XRyC4CISBSXf3kvEAiwAIiIRDE8PIzx
      8XH09vbC4/GwAIiIRDExMYE9e/ZgbGwM3/72t3kMgIhIFLfddtuMn7kFQEQkKG4BEBEVEV8o
      gfdO+Qx5LhYAEVERScoahibjhjwXdwEREQmKBUBEJCgWABGRoFgARESCYgEQEQmKBUBEJCgW
      ABGRoFgARESCYgEQEQmKBUBEJCgWABGRoFgARESCYgEQEQmKBUBEJCgWABGRoFgARESCYgEQ
      EQnK8ALQdR3JZBIAoCgKIpEIotGo0cMQEdENMvSWkNFoFAcPHoTT6cTu3bvhdrvhcDggSdIV
      d6MnIqL8MrQAysvL8c1vfhMHDx4EAIRCISxZsgSLFy8GAGiaBl3XAQCyLENRFCOHN5yqKEil
      UvmOcV0UVS3i7LlNd1VRTUyTG03Tc8quaZqJaXKjaZow2WVZNjFN7mRZzjq/kdkNLQCLxTLj
      5507dyIWi6G1tRV333037HZ75nd2ux2SJBk5vOEkmw0OhyPfMa6LTZKKOHtu012yFc58ZLVa
      csputRbOYTir1SpM9svXRYXAbrdnnd9uN+6Ds6HvYDKZhN/vRzgcRjgcRl9fHzRNgyRJsFgs
      sFqtkCSp4Ff8REQiMLQAFEVBMBjEihUrkEgk0NjYiPHxcWzfvh0lJSVGDkVERDfI0F1AFRUV
      aG5unvFvq1evNnIIIiIySOHsxCMiolnFAiAiEhQLgIhIUCwAIiJBsQCIiATFAiAiEhQLgIhI
      UCwAIiJBsQCIiATFAiAiEhQLgIhIUCwAIiJBsQCIiATFAiAiEhQLgIhIUCwAIiJBsQCIiATF
      AiAiEhQLgIhIUCwAIiJBsQCIiATFAiAiEhQLgIhIUCwAIiJBsQCIiATFAiAiEhQLgIhIUCwA
      IiJBsQCIiATFAiAiEpTNyCdLp9Nob2+H0+nE17/+dfT29uL8+fMoKSnBrl27jByKiIhukKEF
      oGkavv71r+OTTz4BAAwODuLOO+9Ee3s7kskkSktLZzxW13UjhzecpmlQFCXfMa6LSNk1TTMx
      TW50Xc8peyEtAyJl19TCmWeAi3myza+qqmHjGloAl6/gAUCSJADAnDlzEI/HYbfbC2phJSIS
      maEF8HmKokBRFPj9fqxduxaSJGVKQVXVzN8LldVqhc1m6iQyjUjZrdbCOZRlsVhyym6xWExM
      kxuRslulwplngIt5ss1v5HrT0DXE1NQUTp8+DU3T0NfXh9tvvx1tbW1oaGgo2pUREdFXlaFr
      5erqamzbtm3Gv+3Zs8fIIYiIyCCFtR1ERESzhgVARCQoFgARkaBYAEREgmIBEBEJigVARCQo
      FgARkaBYAEREgmIBEBEJigVARCQoFgARkaBYAEREgmIBEBEJigVARCQoFgARkaBYAEREgmIB
      EBEJigVARCQoFgARkaBYAEREgmIBEBEJigVARCQoFgARkaBYAEREgmIBEBEJigVARCQoFgAR
      kaBYAEREgmIBEBEJigVARCQom5lPfvz4cQQCAUiShB07dpg5FBER5cjUApiYmMC2bdtQWlp6
      xe80TYOu62YOf8M0TYOiKPmOcV1Eyq5pmolpcqPrek7ZC2kZECm7phbOPANczJNtflVVDRvX
      1F1AjY2N6OrqwquvvgpVVaGqKmRZhizLZg5LRERZMHULwOVyoaGhAQcOHEAqlYLT6YQkSQAu
      ttilvxcqq9UKm83USWQakbJbrYVzKMtiseSU3WKxmJgmNyJlt0qFM88AF/Nkm9/I9aapa4hA
      IIATJ06gpqYGTqfTzKGIiChHphZAU1MTmpqazByCiIiuU2FtBxER0axhARARCYoFQEQkKBYA
      EZGgWABERIJiARARCYoFQEQkKBYAEZGgWABERIJiARARCYoFQEQkKBYAEZGgWABERIJiARAR
      CYoFQEQkKBYAEZGgWABERIJiARARCYoFQEQkKBYAEZGgWABERIJiARARCYoFQEQkKBYAEZGg
      WABERIJiARARCcpm5pP39vbi/PnzKCkpwa5du8wcioiIcmTqFsDg4CDuvPNO2Gw2JJNJM4ci
      IqIcmVoAkiQBAObMmYN4PG7mUERElCNTC0BRFCiKAr/fD5fLZeZQRESUI1ML4Pbbb0dbWxsa
      Ghpgs5l6uIGIiHJk6lrZ5XJhz549Zg5BRETXyaLruj5bg6mqCk3TAAC6rsNisVzxmE/PDM9W
      nC+1oKYSC2qqsn780bMjJqbJzfybKzG/pjLrxx/rvWBimtzMq3Zh3s3Z7zIcmwpjbCpiYqLs
      zSkrwbJFNVk/vn90CtFE2sRE2asoK0HjguqsH3/eG0A0IZuYKHsVZXbcOn9u1o+PJtMY9IVM
      TJSbpfWVqCgtyeqxSVmFL2TMSTWzWgCXk2UZdrs9H0PfMGbPD2bPD2bPD1VVAfzxZBoz8Itg
      RESCytsWABER5VdBbAGMj48DAKamppBIJGb8rq+vDwDQ399/1f+r63pmU+mLnvvChSv3cXs8
      niv+7fPjXOu5vV4vAoEAACCZTGZyfhmPx3PNL8WFw2GEQhf3S6bTaUxPT1/zefPMHwQAAAi4
      SURBVPr6+pBKpTKvzyherxddXV1XnTZfxOPxzHjvhoeHcfjwYSSTyWu+d8AfX8fISHbHT3p7
      e9Hd3Y1oNHrF7wKBAKampmaMd/k0TaVS6Orqwrlz53A9n3u+7D2+cOECNE3Lel74PF3X0dXV
      he7u7qvOI1/2nmialnldXzTNr9fk5CRUVc3Md7nOI8AfX0MsFsP09PSM+TeXeS+bZfdqotEo
      Dh8+DK/Xa8g00nV9xrqlv78fhw8fRiwWu+HnzkUwGMQnn3yS03ty4cKFwiiA7u5uyLKMzs5O
      lJaWYnp6GmNjYwD++EZf+jMSiSAej2NkZASKomBiYgKtra0Ih8OZFUkqlZrx3D6fD/39/Ugm
      kwiHwxgdHQWAzL7BVCoFj8eDeDwOj8eD6elp+P1+pNNpvP322/D7/VdkPn36NLq6ugAAJ0+e
      xMmTJzMLh67rSCQSiMfj8Pl8mTFjsRj8fj/GxsYwOTkJADNei9Vqzezvi8ViGBgYuCKzoijw
      eDwYGBiAxWKBJElQFAUjIyOIx+PQNA2RSARDQ0NQVTXzu8unyRfp6elBY2MjhoaGMDQ0BE3T
      MDQ0hGQymVnpqqqKZDKJSCQCj8cDXdcxPj6OdPriwcy+vj6Mjo6ipaUFsixjZGQkM301TcOF
      CxcQDocz72s6nb7qNL6a8+fPY968eXj//fcRiUSQTqczr/XSyt7j8WBiYgKBQGDGNL00j0iS
      hP379wMAJiYmMiuheDyOaDSKVCqFQCCQyaRpGjweT2bF7vf7EQgEIMtyZrrGYjHYbDZYLJbM
      vHrpcdnSdR0+nw/z5s3DBx98AF3XMTY2lnmOS/Pr9PQ0vF4vAGTmeUVR4Ha70dvbi0Qi8YXT
      PBKJYHh4OPN+Zeuzzz5DOp1Ga2srysvLM3k+/3x+vx/j4+PQdR2BQGDGSv78+fPw+Xw4ePAg
      nE4nuru7M7+7fN4bHh7OfHk0Ho9fc9m9/P0bGRnB8PDwNed1VVXx7rvvYsWKFbDZbDOW9Uuv
      49Lzx+NxTExMYGpq6opl6vPrmUunuPv9fvh8PjQ3NyMcDs/Ir+s6gsFgZpnSdR3Dw8NIJBLQ
      NA3JZDKneeXzOjs7sWbNGsiyjHQ6nfkOVjqdRjweh9frRTgcnjGWzWYrjAKIRqP47W9/i127
      dmF6ehqHDh2C1+vFyZMnZzzuyJEjmJiYyKw0WltbMyvaeDyO0dFRyLKMd999N/N/Lly4gM7O
      Tmzfvh09PT04ceIEuru7MTU1hTNnzkBRFPz+979HKpXCH/7wB6iqisHBQXR2diKVSiGRSGQ+
      QV7u0opFVVVEIhFUVVUhGAxmFpJjx47h4MGDCAQCeO211xCJRNDR0QHg4iepo0ePZj5FXXot
      k5OTV3yi/3zmt99+G6lUCul0GqlUCgMDA/D5fEin03jnnXcQjUbx1ltvIRqN4tNPP8WBAweQ
      SqUyK4xsaJoGVVVhs9lw4MABKIqCd955B5999hm8Xi9OnDiBYDCIkZERxGIxtLe3z/j/g4OD
      2LJlCyorKzFnzhyMjo4iHo+jvb0dU1NTiMfjeO+9975wy+1a7HY7ampqsHPnTpw5cwatra3Q
      dR0ffvhh5jHRaBQ+nw9tbW1XTFOn04lbb70VDocD6XQaXq8Xp0+fxtDQEH7/+9/D7XZjcnIS
      XV1d6O/vx8jICN5//30kEgkkk0kMDAxgcHAQR44cQTAYxEcffYRUKoVPP/0UZ86cyZzZNjo6
      iu7u7pw/Jeu6nvkwEIlEMD09jY8++gihUAhnzpwBcHHryufz4dixY3j//feRSqXg8/mQSCQQ
      iUQgy/IXTvPf/OY3SKVSmfkxF/v378eyZctQXl6eyXP58x0+fBijo6Po6OhAOBxGR0cHfD4f
      FEUBAGzbtg1vvvkmli9fDofDMeO5LRYLHA4HSkpKoOs6Dh8+DAA4dOjQVZddWZZnvH+BQCAz
      r16N3+9HS0sL5syZg9ra2hnL+uXTqru7GwcPHoTP58OHH354xTJ1+XrGYrFkpoPL5YLX68XA
      wADq6uoy+T/99FPouo4333wTqVQKH374IT766CPIsowPPvgA0WgUL7zwwlX3UmTL5XLB7Xaj
      pqYGQ0ND8Pl8GB8fx8DAAPbv349QKIS2trYZY505c6YwCsDpdKKpqQkejwejo6PYsGEDNm7c
      mPmUDFxckQ8PD6OhoQGjo6Pw+/1IpVKoq6tDfX096uvr4fP5MDY2NuMTQH19PZxOZ2Ylvn79
      eixdujTzmHA4jIaGBjQ2NsJut0OSJGzYsAHz5s2Dw+FAbW0tmpqarpq7paUFx44dw5w5c676
      +4qKCqxYsQK33HILWlpaUFZWlvl/69evh9/vn/FaruVS5mQyCZfLhcbGRpSXl2d+PzExgbGx
      scxmZ0tLC1asWIFUKoVVq1ZhYGAg8+nvy2iahuPHjyMajWLhwoWQJAmNjY2YO3cuVq9ejZMn
      T2JychJ1dXUYGRlBIBC4YneFxWLJLPAAsHDhQjQ3N6OsrAyBQABerxfJZBKyfP2nEEYiETid
      zsxrv/xMj4qKCqxevRrV1dc+pVFRFCQSCXi9XsiyjFAohLlz52LPnj2ZFcmlT0slJSVoampC
      VVVV5tO23W6HLMtQFAWnTp3CunXrZjx/bW0trFYrxsbGMqc+ZyMQCOCtt97Cn/7pn2Y+kSqK
      gkjk4mmu6XQao6OjSCaTCAaDWL58OQYGBhCPx1FbW4ulS5fC5XJ94TRvaGhAU1PTdX05c/36
      9Vfsrrv8+SKRCDZs2IC6ujo4nU7MnTsXFy5cyMwP0WgUVVVVV13ZKYqCY8eOoaamBrfccstV
      x7582b30yfbS+1ddXY1bb731mlcdcDgcM3bNXL6sT0xMIJVKIRqNQtO0K+ahy5epq61nAKCs
      rAz3338/5s6de8WHIgBYvHgxmpubASDzwUSSJOi6jo0bN2LNmjXXmOpfbseOHdi6deuMD7+X
      3HzzzVi+fDkqKy+eFn75WP8fIbG2PtJJIIkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Normal Result Matches per Season' width='384'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Number of Matches Affected by DL Method (per Team)' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAabElEQVR4nO3da3BcdcHH8d9ecmkubdOmaUIvJGnatEAprbagFWQYVAQcZkTHcRR1HHEc
      fKOIDi8cQccRX/jwQpnBZ0YclccRYQZk2gKl0qaxaumFlrQJbdLmtrlsNvdsssnZ23leZLIP
      KfB4Ss/JZvv/ft4Udjf//efsZr/nf/bms23bFgDAOP5sTwAAkB0EAAAMRQAAwFAEAAAMRQAA
      wFAEAADeJZFIKJVKaWZmJttT8RwBAGC8p556Sr/5zW8kSS+88ILOnz+vn//855nzf/azn+lb
      3/qWfvrTnyocDmdrmq4LZnsCAJBNqVRKkUhEiURC6XT6fS/zk5/8RD/60Y/02GOPaXR0VL/4
      xS8UDAb18MMP63e/+53C4bDuuece9ff36+zZs4rFYiouLlZpaanuuecePfvssyovL9dDDz20
      wL/d/48VAACjvf322yotLdXSpUvV1NT0Hy//6quvqry8XJZl6fTp09q2bZtWrVqlAwcOqKur
      S9/85jdl27YeffRR9fX1qbu7W7Zt6/bbb/f+l7lMBACA0RoaGrRu3TqtX79ehw8f/o+XLyoq
      Ujqd1l133aVly5bpxRdf1N13351ZPfh8Pvn9/sy/Gzdu1De+8Q09+eSTH7jCyJbA448//ni2
      JwEA2RKNRnXffffpxhtv1NjYmOrq6rR69WoVFxerpqZm3mU3bNig2tpanT9/Xj09Pdq5c6dG
      RkYUiUR0ww03qLq6WmvXrlV+fn7mZ0tKSvTyyy/r5ptv1pYtW7LxK34gH58FBABm4hAQABjK
      81cBJRIJSZJt2/L76Q0ALBYLdggolUopEAgsxFUBABxwfQXQ3NysmZkZrVmzRpWVlW4PDwBw
      iavHZGzbVmdnp+rq6lRWVubm0AAAl7kagFgsptHRUR0/flzxeNzNoQEALvPkOQDLsnTw4EF9
      9rOfzZzGcwAAsLi4+hzA0NCQTp48qUAgwPF/AFjkXF8BpNNpJZNJ5efnzzudFQAALC68DBQA
      DMU7swDAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQA
      AAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQA
      AAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQA
      AAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQA
      AAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAD7AD3/4Q7355pvZngYA
      eIYAvI+XX35ZW7ZsUSwWy/ZUAMAzBOASIyMjamtr09atW5VMJrM9HQDwDAG4xPj4uFasWKF9
      +/apoaEh29MBAM/4bNu2F+KKUqmUAoHAQlyVK/r7+zUzM6OamppsTwUAPOFJAFpbW3Xttdeq
      oKAgc1quBQAArnauHwIKh8NqaGhQNBp1e2gAgIuCbg6WTqd14sQJ7dy5M3NaIpHInOf0SdUT
      50I6+U63m1PLSR/Zsl4f3bwu29MAcJVyNQBnzpxRIpFQS0uLxsfHdfvttysvL0/S5R0COt3W
      p//+27/cnFpOeigY1O5tddmeBoCrlKsB2LZtm7Zt26bTp09r7dq1bg4NAHCZqwGYc9NNN3kx
      LADARbwPAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAM
      RQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAM
      RQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAM
      RQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAM
      RQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAM
      RQAAwFAEAAAMFcz2BGCWZDKpX//617JtW7feeqt27dqV7SldVUKhkP76178qnU7ra1/7mior
      K7M9JSxirACwoPx+vx566CF9//vf12uvvZbt6Vx1Vq1apR/84Af68pe/rH379mV7OljkCAAW
      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
      00qlUurs7FQ8HtfMzIwSiYTGxsbmXUaS+vr6MuM1NTVpampK6XRatm1rampKyWRSoVBI7e3t
      kmYjMTIyMu/60+m0enp6NDExIWn2ztHV1SXbtt9znmVZCoVC6urqWriN6oBt2+rv71dJSYn+
      9re/Zbb53O8x90fQ3d2tUCikWCwmn8+nQCAgaTaklmUpEAho3759kqTR0VH19fVJmt1Wc7fh
      yMhIJrbpdFqhUCjzBzx3XiKRkGVZkmbfdBgMBuXz+TLzePftsNjs27dPdXV1Kioq0sDAgEZH
      R9Xb2ytJ87bppffnaDSqrq4uxeNxJZNJdXd3Z3ZO5t5rMzMzo6amJm3dulWTk5OZ82OxmGzb
      VjQaVWdnZ+YFGb29vZn73tz9VZq9vc+ePau2tjZFIpF5f0N9fX2ZnxkfH1d/f78sy5JlWeru
      7n7fHYSF0NTUpGg0qlOnTikQCGh0dFT9/f2S/u9BOhQKybbtzLaZm+/g4KAOHDiQ2eG79Pdo
      ampSOBzWhQsXNDMzo4mJicxtNnc8fe5vd+4xZHR0VAMDA5qentbevXs1NDSUGa+7u1vr16/X
      66+/Lun/br+RkRG1trZqcnJS8XhcnZ2dSqVS8x6jJiYm1NfX96F2pP4/ORGAVatW6ciRIyor
      K9PY2JjOnTuneDyut956S2+88YbC4bAOHTokSXrmmWfU2tqqjo4OTU9P69VXX9X09LSGh4d1
      8OBB2batv//97zp79qxeeuklTU5OzrvMnFOnTunIkSOKRCIaGBhQc3Ozurq61NXVpb1798qy
      LMXjcbW3t6ujo0PHjx/X+Ph45vqHh4cVi8X02muvKZVKKRKJaGZmRocOHZp3XiKR0N69ezN/
      4IvNkiVLtG7dOq1fv17j4+Pav3+/4vG4/vWvf2Uu09vbq1gspoaGBlmWlQmjJBUVFWnDhg0q
      KChQOp1WV1eXwuGw3nrrLR08eFAHDx7UwMCATp48qQsXLqi7u1v79+/X9PS0ZmZmNDw8nDmv
      q6tLR44ckWVZOnbsmFpaWjKvLOvt7VVTU9P77pllm2VZWrlypcrKyrR69WpJs3unTU1NGh4e
      nrdNL70/P//887IsS4cPH1Y4HFY8Htcrr7win8+nlpYWSVJ+fn4mAlVVVXrzzTclSceOHZNt
      29qzZ4+SyaRef/11nTp1SqOjo2poaFAymczcX+dcvHhRLS0t2rFjR+ZvaN++fRofH9fBgwfV
      19eno0ePKhQK6cKFC9q/f78sy1I4HF7grTpraGhIe/bs0Z133qmRkREdPXpUfX19evvtt+dd
      rqGhIfMgHY/HdeDAgczOx6Wnz+np6VFjY6M++clP6uzZszp9+nTmNmtpaVEymdSePXtkWZb+
      8Y9/KJVKqaOjQ42NjZqentb09LSi0WhmPNu2lUwmM5+U0NLSotbWVjU3N2d2bA4cOCDbtnXo
      0KF5j1GvvPKKxsbGNDk56er2y4kA7Nq1S3fccYfeeOON9zxIlpSUaOvWrVq5cqUkafPmzfrY
      xz6WOX/jxo1qb2+XZVkaGhpSf39/pryf+tSntHbt2nmXmbN161bdfPPNKi8vV21trbq6utTW
      1qb6+notXbpUdXV1Ki4uzuw15OXlaWpqKnP9IyMj6uvry1R83bp1qq+vl23b886LRCKqra3V
      hg0blJ+fvwBb88OZmpqSNLsHPzg4mNnLl6S1a9eqvr5eS5Z88EvSksmkksmkent7NTMzo7Gx
      MRUUFOjuu+/W5OSkksmk0um0ZmZmlJ+fr02bNmn58uXq6+vLnJdOp5VMJnXmzBnddNNN88av
      qKiQ3+/P7P0tJsFg8D2HUrZv367q6mpFo9F52/TS+3Ntba02bdqkYDCowcFB9ff3Z26LOX6/
      X/fff782bNiQ2bt8t6qqKtXV1amwsDCzJ19QUKBYLPaev5f169crmUzOm295ebm2bNmiZcuW
      qbu7W7t379a1114rSdqyZYva29szq46FtmLFClVVVSkSiai3t1c7duzQRz7ykXl73ufPn5dl
      WaqoqFBvb68GBgZkWZZWr16tyspKVVZWzjt9TmVlpYqKijKHZrZv366amprMZSYmJlRbW6u6
      ujrl5eUpEAhox44dqqqqUklJiSoqKlRTU5MZb2JiQvv27dOuXbsyp4VCId16661as2aNJGVu
      47kVxtxjVE1NjTo7O13fSfxf3FjcyWDvEZkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Players Retired Hurt' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAX4UlEQVR4nO3dfWxT973H8Y/tOE+kCSTk6ZJ2kKaBLA1PpRRaQBvSuj/KVlqYtlbrX5OG
      dss0lU7a1kpXnbY/Jm1F06rdP5CmTduqVdVlmhjVVgptyspEWgIDBqVtgMRJnNgJjh3HT/HT
      /YNL1vRph9tz4ji/9+ufFMc5/ubY9dvnHB/Hlc/n8wIAGMdd6AEAAIVBAADAUAQAAAxFAADA
      UAQAAAxFAADAUCWFHgAACu3Pf/6zenp6JElf+cpXtGbNmlnf/9Of/qSdO3cWYjRHEQAAxguH
      w3r00UcVDofV29urWCym48ePq6amRnfeead++9vfKpFIqKGhQT09Perq6tKSJUvU3d2taDSq
      hoYGxeNxPfHEE/rFL36hVCqlvXv36sUXX1Q4HFZNTY327t1b6F/zQ9gFBACSfv3rX+v555/X
      mjVrtHz5crW0tKi7u1tbt25VZ2enHnnkEZ07d07Lli3Thg0bFAgE9MADD6ipqUmPPfaYEomE
      Kioq1NXVpenpaZ0+fVp+v19PPfWU/H5/oX+9j8QWAABIeuihh1RaWqqjR49qampKe/bsmdkt
      FIlElEgk9NBDDykWi2n//v3atGmTXC6XPB6PXC6X3G63Tp48qYmJCd1zzz3K5XJyu90z35uP
      PM8888wzhR4CAArJ5XLp9OnTikQi+trXvqampiYdPXpUnZ2d6uzsVC6X04ULFyRJr7/+unbs
      2KHm5mbV19erqqpKLS0t8nq9WrdunU6ePKnKykp1dnaqrq5OK1askKSZr/OJi88CAgAzzc/t
      EgCA4xw/BpBOpyVJ+Xx+3u4HAwATzdkuoGw2K4/HMxc3BQCwwNYtgGw2q/PnzyuZTGrdunUq
      Kyuzc/EAABvZuk8mlUqpqalJHR0d6u7utnPRAACb2RqAyspKjY+P6+WXX1ZnZ6ediwYA2Mz2
      g8AdHR2qrq7Wu+++q5aWFrsXDwCwia0BGB0d1YULF+T1elVeXm7nogEANrP9XUCZTEbZbPZD
      B4B5FxAAzC+8DRQADMWZWQBgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABg
      KAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABg
      KAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABg
      KAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABg
      KAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABg
      KAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABg
      KAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABg
      KAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABg
      KAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYqKfQA
      800+n9dvfvMbBQIBbdmyRVu2bCn0SAsK6xeYP9gC+IBcLqdt27bp+9//vl5//fVCj7PgsH6B
      +YMAfIDH41Fzc7N++MMf6v777y/0OAsO6xeYP1z5fD4/FzeUzWbl8Xjm4qY+lXw+r+9+97v6
      3ve+p4aGhkKPs+CwfoH5gy2ADwiHw5qentaLL76oP/7xj4UeZ8Fh/QLzh+1bAOl0WpFIREuX
      Lp11ebFsAQCAKWwNQDQa1YkTJ1RbW6tkMqlt27bNfI8AAMD84sgxgKtXr2pkZET33nuvstms
      pOsBsHpTI9cmNTI+afdYRad5abWa66ptXy7r97r2W+tVVVlW6DGAgrH9PIATJ07I4/Ho3nvv
      nXW52+1WSYm1m3vp72/rv//nuN2jFZ3/3L1Nj+/e9u+veJNYv9f9+r8e08bPfqbQYwAFY+tB
      4GvXrikQCOjWW2/VxMSEpOtv+/N4PHK5XHbeFADgU7J1C6CyslKdnZ2ampqS280bjABgPrM1
      ABUVFVq5cqWdiwQAOISX6QBgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABg
      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
      hz+0biTNOvP+/es2Go1KkqamppRMJjUxMaFAIKBQKKTx8XFJ0sTEhPx+v6Tr9+nY2FhRP24/
      yeTkpAYGBnTq1CmlUin985//VFtbm/r7+zUwMCBJH7rsxr7zUCikQCCg6elpHT58eObxemN9
      Spp5LGezWfn9/pnngvdfJxaLaXBwcOb5pJAW3Nla9fX1euONN7Rx40ZJ1yOQyWTkdl9vXUlJ
      iWpqalReXq7q6mqdOXNGXq9Xvb292rJli/7yl79ozZo1evPNN+X1euVyuZRMJpXP59XT06PP
      f/7zOnny5Ew8pOuvJAYGBtTe3q54PK6///3v2rVrl371q19pw4YN2rx5c0HWhR3OnDmjgYEB
      BYNBpdNp+f1+hUIhxeNx9fT0aMmSJVqzZo0CgYAWL16skZERTU1NaXR0VO+8844efPDBWT9z
      5coVbd++XT6fTx6PR93d3cpms6qtrdWVK1e0c+dOlZSUzLofXS6XLl68qOrqasXjccViMZWX
      l6unp0dtbW06deqU1q5dq76+PtXW1mrZsmXyeD7duyMKqaOjQ5cuXVIikdDq1avl8/k0MjKi
      t99+W/fdd5+y2eysx/gHvX/dNjU1zbxYqa2tVSqVks/nU0dHhy5fvqxdu3ZpYGBAuVxuJjDL
      ly/XO++8o927d8/xbz43zp8/r8bGRm3YsEFXrlxRWVmZSktLdWNvuMvlmnXZxYsX5fV6dfr0
      aVVWVqqurk6JREKRSESxWEzBYFCRSESbNm3SwYMH1draqpqaGqXTaS1atEgVFRWzrnPo0CFt
      3LhR586d0wMPPFDQdbHgtgA2btyo7du369ixY0qn0wqFQjp06JC2bt36kde/UemysjIlEgmt
      WrVKn/3sZ5VKpRSJRHTXXXepqanpY9/CGovFdOTIEW3atEmhUEh+v1/JZFLpdFqrVq0q6id/
      Serq6tI999yjpUuXKh6Py+/3K51Ozzyh3H///aqoqFBra6tWr16taDSqqqoqdXV1qa6u7kM/
      I12Pss/nUygUUjKZlMfj0fr169Xc3Dyz5fXB+/GGdevWacWKFUqlUiotLVV7e7tqampmZr3j
      jjuKfvP8tttu09DQkEKhkJYuXao777xTFy9eVDqdVllZ2ceuG+nD63bVqlU6ceLEzPk5q1ev
      VmNjo9auXava2lpNT09reHhYyWRS4XB41n23ULW1tSkSiSibzSqTyej06dOqr6/X8uXLJekj
      L/P7/cpkMsrlcnK73WpoaFB7e7t8Pp8ymYy8Xq9isZhuvfVWfe5zn1N7e7vC4bCCweCHrtPS
      0qKVK1eqsrKycCvh//wv0ArYjRi70mYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Result Type' width='384'>
      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
      rhfdHr0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Running Total of Each Match' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXhU1f3H8fe9k4UECAlLwhJ2EVCWggEEFFAxgoq7tm5Vce3PtlZxrdrW
      Wq0LVkQrCFK3qhVwRREB2Qmyyx4BJYhhSUKAhCyTmXvv74+BsEOWmclyP6/n8TGTzNzPmQDn
      O/fcc88xHMdxEBER1zGrugEiIlI1VABERFxKBUBExKWqRQGwLCvsmV6vV5nKVKYyXZ1ZLQqA
      iIiEnwqAiIhLqQCIiLiUCoCIiEupAIiIuJQKgIiIS6kAiIi4lAqAiIhLqQCIiLiUCoCIiEup
      AIiIuJQKgIiIS6kAiIi4lAqAiIhLqQCIiLiUCoCIiEupAIiIuJQKgIiIS6kAiIi4lAqAiIhL
      qQCIiLiUCoCIiEupAIiIuJQKgIiIS6kAiIi4lAqAiIhLqQCIiLhURDAP9vPPP7Nu3TqKi4s5
      55xz+Pnnn9m9ezd169alX79+fPnllziOQ+/evWnatGkwo0VEpJyCWgCaNWtGq1at2LhxI9nZ
      2WRnZzNkyBCmTZvGtm3baN++PZ06dWLmzJlHFADHcfD7/cFsyinZtq1MZSpTma7ODOoQUGRk
      JIsXL2bnzp107tyZiIhAfYmIiKCgoIC4uDhM08QwDAB8Ph8+nw/btoPZDBERKYOgngFs2LCB
      qKgo+vTpA0BxcTGO41BUVERSUhLr16+nQYMGpYUhMjISAMuy8Hg8wWzKKVmWVdoOZSpTmcp0
      Y2ZQzwAiIiLYs2cPs2fPZseOHfTq1YsZM2bQrVs3GjZsSGxsLIsXL6Z///7BjBURkQowHMdx
      qroRVXEG4PV6iY6OVqYylalM12ZqGqiIiEupAIiIuJQKgIiIS6kAiIi4lAqAiIhLqQCIiLiU
      CoCIiEupAIiIuJQKgIiIS6kAiIi4lAqAiIhLqQCIiLiUCoCIiEupAIiIuJQKgIiIS6kAiIi4
      lAqAiIhLqQCIiLiUCoCIiEupAIiIuJQKgIiIS6kAiIi4lAqAiIhLqQCIiLiUCoCIiEupAIiI
      uJQKgIiISwW9AOzevZucnBwAcnNzWbBgAbt27QIgIyODpUuX4jhOsGNFRKScgloAdu3axZIl
      S8jIyABg3rx59OrVi7S0NPbv3096ejrNmzcnLS0tmLEiIlIBhhPkj+P79u1j06ZNpKSkMHv2
      bPLz8/F4PLRv3566devSsmVLZs6cyeDBg/H5fADYth3MJpSJZVl4PB5lKlOZynRtZkQogwoK
      Chg2bBhTp04lIiKC4uJiHMcp7fAjIyOPaVC4eL1eoqOjlalMZSrTtZlBLQCZmZmsXbuWrKws
      EhMTsW2bRYsWUVhYSNu2bfn444/ZtGkTHTt2DGasiIhUQNCHgI5WVFREnTp1MAwD27bx+XzH
      VDydAShTmcpUZvgzQzoEBBATE1P6tWmaYX+zIiJyfLoPQETEpVQARERcSgVARMSlVABERFxK
      BUBExKVUAEREXEoFQETEpVQARERcSgVARMSlVABERFxKBUBExKVUAEREXEoFQETEpVQARERc
      SgVARMSlVABERFxKBUBExKVUAEREXEoFQETEpVQARERcSgVARMSlVABERFxKBUBExKVUAERE
      XEoFQETEpVQARERcKugFwLZtvF5v6ePc3Fz2798PQHFxMXv27Al2pIiIVEBEMA+WlZXFnDlz
      aNeuHSkpKSxevBjDMIiJiaFTp05MmTKFxMREEhMT6dy5czCjRUSknAzHcZxgHcxxHPLy8ti0
      aRMpKSl88sknJCcn06JFC4qKijBNk3bt2jF9+nRSU1OxLAsAy7IIYjPKxLIsPB6PMpWpTGW6
      NjOoZwCGYRzx2LZtzjjjDGbMmMHpp59OvXr1jvs80zSJiAhqU07J6/USHR2tTGUqU5muzQxq
      r1tYWEh2djZ79+6loKCAunXrkp+fj2matG7dmlmzZlFUVER8fDxAaRU6eCYgIiLhE9SLwF6v
      F8uyaNmyJcXFxaSmppKVlUX//v2pV68effr0wXEcUlJSghkrIiIVENQzgISEBBISEo74Xvfu
      3Uu/TkpKIikpKZiRIiJSQboPQETEpVQARERcSgVARMSlVABERFxKBUBExKVUAEREXEoFQETE
      pVQARERcSgVARMSlVABERFxKBUBExKVUAEREXEoFQETEpVQARERcSgVARMSlVABERFxKBUBE
      xKVUAEREXEoFQETEpVQARERcSgVARMSlVABERFxKBUBExKVUAEREXEoFQETEpVQARERcSgVA
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Teams That Won Both Toss and Match' width='384'>
      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
      KhqNqr6+Xvn5+RoaGlJPT4+k9+/oya+BQGBK1r6+Ph08eFCjo6PxB5Sbxzh79qx6e3t15cqV
      227D5H7NSCSizs5OhUIhdXZ2amhoSH6/XxMTE9q/f7/8fv8HLv/r16/rzJkz2rRpU3yZ+Hw+
      jY6OSpL8fn+8oIPBYHycW7MEAgF1dnYqFotNWf5Hjx5VWVmZFi1aFL8vJ++vaDSqgYGB+LKa
      mJiIL+9wOKxoNJr0g8X58+e1du1aXbt2TdeuXZPjOOrs7JTjOBobu/GC3/j4uGzbVl9fX3wD
      vnmDfPvtt1VSUqIlS5YoEomoq6srnuvm+2hiYkJ+v1/Xr1/XxMREUjk/SCwWU29vr8rLy/XW
      W28pFoupp6cnfh9M3udDQ0PxB8TJTJZlqaGhQS0tLRofH4+X0+T63NXVFb9fA4GA2tvbk8p9
      /vx5rVy5Us3Nzbp48aJisZja29vj5dfZ2Sm/36+hoaHb1lHpxmlhli9froaGBvl8vinLMhqN
      amJiQoODg7JtW9euXYtnGx0dVWtrq/r7+6esI8FgMH77bduWx+OJP/m4eZlMunTpkiYmJnTw
      4EEVFhbGs926LCbv01gspsHBwSkP8levXlVvb68OHTqkgoICnT17dsrymVz32gah1scAAAV2
      SURBVNvbp6zrH7Tt3rwOdnR0qL29/Y6PMcny+XwqKChQMBhUbW1t/HZNrkcTExPq7u6W4ziZ
      LYDJBwvbthUIBDR37lwNDw/H76yTJ0/q0KFDGhwc1I9+9CMFAgEdPnxY0o1Gb2pqirf55J3b
      399/2zP68+fP6/Tp0zp79qwGBga0f//++EYciUTU2tqq3t5eTUxM6MCBAxobG9Obb76psbEx
      vffee6qpqVEkErnjs5CxsTG98cYbeuSRRzQ0NKTjx4/L5/PpzJkzUy7X2Niovr6+KVknHxRD
      oZC6u7sVjUb185//PP4/XV1dqq+v12c+85nbbkNzc7Msy9JPf/pTRSIRvfPOO7JtW21tbaqv
      r1ckEtH4+Hj82fidNDc3a/fu3SouLta8efPU39+vkZERvf3222ptbVVbW5saGxs1MjKiH//4
      xwqFQnr77bdvy9LR0aFgMKi6uropy3/lypVqaGhQJBJRcXGx3n33XUnS8ePH1dXVpaamJrW3
      t6u5uVkHDx5ULBaLX/9PfvKT+IN2MhzHiT8g1NTUKBAI6NChQzp8+LBs29bhw4dlWZZ8Pp8u
      XLhw27Mky7K0cuVKlZeXKycnR62trQoEAmpsbLzjfZRqsVgs/kQmEAhoaGhIR44c0cjIiJqb
      myVJ7e3t6u3t1cmTJ/XLX/5SkUhEvb29Gh8fVyAQUDQaVXd3t0KhkOrq6jQwMKBQKKRf/OIX
      sm1bP/zhDxWJROLbUiJycnI0f/58feYzn1FnZ6eOHDmiaDSqt956a8rlLl++PGUdneR2u7Vg
      wQI99thjam5unrIsu7q69O///u8aHBxUbW2tYrGYampq5Pf74+uPpCnryPHjxxWJRHT06FE5
      jjNlrJuXyc1+9rOfad26dSosLIxf/uZl8e6776q7u1uHDx/W6OioDh8+rN7e3niR7Nq1S//9
      3/+tDRs2KC8v77blk5eXp9zcXMVisSnr+p223Wg0OmUdHBwclGVZOnDgQML3yYcpKiqKP7G7
      dVvev3+/xsbG1NfXl/kXgauqqnTy5EkVFxff8e9FRUXauHGjVq1apaqqKs2ZMyf+f1u3bpXf
      71d3d7f8fv+HtufWrVu1evVqhcNhlZSUaO3atSosLIz/va+vTz09PfFnFlVVVdq4caMikYg2
      b96s1tbW+DOomxUUFKiyslKdnZ3q7u7W/fffrwceeCA+O5FuPJC3t7eroqJiStYlS5aorKxM
      ZWVl6u3tVU9Pz5TbUFZWpoKCgviD+ORtmLzM6OioKioqtHbtWnm9Xrndbt1///0qLy9XXl6e
      Fi9erMrKyg9cJnl5eVNO0bFw4UJt2LBBJSUl8WdQXq9XwWBQy5Yt0/r161VQUHBblo6ODg0O
      Dt6222LFihX6rd/6LXV1denq1au3jb9+/Xp98pOflN/vjy//yWdHe/fu1bJlyz4w+51M7nIa
      GxvTsmXL5Ha7tXHjRrlcLt1///06ceJE/LxUPp9P0Wj0toK8dVdVVVWVNm3aFH9AufU+SrXB
      wUG9+eab+vSnP61AIKDu7m5ZlqVAICDp/Wdv4XBYw8PD2rBhg1pbWxUKhbR48WKtXr1aJSUl
      8ftrzpw5GhwclM/ni8+sKioqVFlZOa03Z04un8mid7vd8UO7pRvrxapVqz5wdjE+Pi6v13vb
      svz0pz+ttWvXqr+/Xz09PfJ4PGptbdWuXbu0cuVKSZqyjmzZskVnz56VbdvKzc2dMsbNy+Rm
      W7duVUdHx5Tf3bwsAoGA7r//fi1ZskQFBQWaP3++urq64rd5bGxMc+fOveMuWcuydPLkSS1a
      tEirVq267e+3bruhUGjKOrhgwQKtWbMm5WdMsG17yrY8NDSkhQsXav369XIcR/8fCpV2MJpU
      xXsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Teams That Won Toss but Lost Match' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Top 10 Batsmen Most Dismissed by Catches' width='384'>
      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
      bW1VKkyWWlpadOmll2r79u0KhUI6dOiQJOlf//qXnM4zL+fZ+3p6etTe3q4tW7aou7tbwWBQ
      TU1Nam5uVjAYlGVZamlp0fDwsCKRiHw+X6zP4eFhdXV1qa/vzM6r3t5edXR0JKdpSceOHVNZ
      WZl27doly7K0detWlZWVKS8vT8FgUJL03HPPae7cucrIyIj11traGuuvra1NgUBAoVBIwWBQ
      Pp8v1md/f7/a29s1NDQUe2x/f3/S+pWko0ePqrm5WQsXLtTw8HDs/rf3Pjw8rJaWFlmWJb/f
      r97eXnV3d8vn8+nUqVMKBoM6fvx47I+/tbU19hhJ8ng85/xOUo3P51NTU5Mk6cCBA7H7Dx48
      qK6urtgKsKOjI/Z+fetr39/fr9OnT8vtdqf0Sah79uxRc3OzJOnFF1/U0aNHz3tPS2fWYZdd
      dpnq6+vV0NBw3us5MjKipqYmRSKR89Zlb98HN6kCICcnRx0dHTp27Ji8Xq+kM38sc+fOjQWA
      JEUiEYXDYbndbrW3tysUCmnbtm0KBAI6duyY6urqdOzYMe3duze2IhkaGtLu3buT1Nl/RKNR
      WZYlp9OpoqIinThxQqFQSGlp73yEwsjIiPr6+hQOh9Xc3KxAIKA9e/aoq6tLwZSIaoAAAALb
      SURBVGBQf//73zU4OKidO3eqr69PL730kurq6tTT06Pdu3draGhIzc3N6urq0iuvvJLAbv8j
      Go0qHA7L4XAoGAwqPz8/1s9ZJSUl2rt3r9LT0+XxeNTe3q7h4WHt3r1bPT09Gh4e1rZt29TW
      1qYnnnhCPp9PtbW18vl8evrppzUwMKDnnnsu9thnnnnmnNlToh0/flxr1qxRY2OjRkZGJJ2Z
      pb6999bW1tgHncOHD6u+vl67du1SS0uLnnvuOUlnPhz19vbq5ZdfVjgc1vHjx7Vnzx6Fw2HV
      19ef8ztJNfPnz9frr7+uvr4+TZs2LXZ/W1ub9uzZo/Xr1+vAgQPq7u5WXV2d+vr6znntz6qv
      r0/pAJg3b57efPNNnT59Wvn5+ZLOf09LksPhUH5+vtavX6/W1tbzXs9t27bJsizV1taety6r
      r68/Z8xJFQAZGRm6/vrrlZ+fH3vhly5dqpaWlthjIpGIDhw4oMHBQZWWlqqrq0udnZ2xTSnS
      mb35VVVVKi4uVjgcVktLi3w+n/x+f6JbOk9/f7+2bt2qFStWSJLS0tJ06NAhLViwIPaYszMV
      y7LkdrtVWFioefPmKSMjQ+Xl5Zo3b55cLpdOnjypzs5ODQ0NSZJmz54d+7Tpcrl0+eWXq7Ky
      Ut3d3Wpvb5ff7499wkq04eFh7dixQ5WVlUpPT5ff79eMGTOUmZmpwcFBSdKCBQv0gQ98ILap
      qLS0VBUVFcrIyJDP51NHR0fsdV67dq3mzJmj7OxsLViwQLNmzdL8+fPPeazf748dqpwMDodD
      oVBIS5Ysib2H3W73eb23t7eru7s71tuiRYvk9Xq1ZMmS2IqkvLxcixYt0sDAwHnv77PO/k5S
      jcvlUjQa1aFDh7Ro0aLY/UVFRcrMzNTp06fl8/m0dOlSLVmyRB0dHee89hOFw+GQw+E4p8+3
      v6ff6uyM4K2v58jIiAoKCjRnzhw5nc53fK3P+n/hf2PIeQHXwAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Top 10 Bowlers Who Conceded Most Extras' width='384'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Top 10 Bowlers by Dismissals' width='384'>
      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
      t0H4sgZChZUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Top 10 Bowlers by Maiden Overs' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAfUklEQVR4nO3de2xT9/3/8Zd97JjcKARSAnRcf4UqDOiAsZZGlK6MaaXtypet+6eTJk2T
      fr+pW1c07Y9N0zq1W/+oOmnrpN9P3fiumlTEt+smret6G6VAIdCWayDhmgSSkLsJufp2zvHv
      j6oeobA6sY8d5/N8SFUd4+PP++1zeflcbPuSyWRSAADj+PNdAAAgPwgAADAUAQAAhiIAAMBQ
      BAAAGIoAAIAsiMViKrSLKgkAALjOwMCAvv/97+vpp5/W9u3b05rmhRde0NWrVz2uLLsIAAC4
      juu6mj9/vrZt26a6ujrF43E9++yz+sUvfqH29nZt375dw8PDevrpp5VIJLRjx47UtC+99JKe
      eeYZnT59Wn/+85/18ssv6/Dhw3ns5uYC+S4AACaio0eP6le/+pUWLlyo2tparVy5UitXrtSr
      r76qvr4+HTp0SD09PaqtrVVxcbGkj/ccDh48qC1btmjnzp1KJBLatGmT1qxZk+dubow9AAC4
      gerqav3gBz9QQ0ODSktL1dPTo56eHpWUlGj16tXasWOHvvOd7+gPf/iD7r77bklSMBiUbdua
      O3euHnzwQVmWpQ0bNuS3kf/Aeuqpp57KdxEAMNE0NTXpwoULevjhh7Vq1SqdOXNG586d02OP
      Paa5c+cqGAxq/fr1ikajWrdunSRp4cKFmj17tmprazV//nzNmTNHCxcuzHMnN+fju4AAwEwc
      AgIAQ+X0JLDjOHJdN/W3z+fL5fAAgGvk7RCQ4ziyLCsfQwMA5MEhoKGhIbW3t0uSuru7tX//
      fl28eDHbwwAAMpTVABgcHNQHH3yghoYGSVI8HteaNWt0/Phx2badzaEAABnKagCUl5fr/vvv
      Tx3bnz59ut577z0VFRUpEOAzZwAwkXh6FVBJSYnWr18vx3E0NDTk5VAAgDHK6tvycDis+vp6
      NTY2at68eers7JRlWYpGo+wBAMAE4+lVQMlkUpFIRFOmTJHfP3png6uAACC/uAwUAAzFJ4EB
      wFAEAAAYigAAAEMRAABgKAIAAAxFAACAoQgAADAUAQAAhiIAAMBQBAAAGIoAAABDGREA8Xhc
      Bw8elCRFo1G98sorevPNN/NcFQDklxEB8Pvf/17//Oc/JUm1tbVau3atOjs7derUqTxXBgD5
      Y0QAbNu2TTNnzpQkffnLX1ZJSYkaGhq0YMGC/BYGAHlk3K+0NDU16cUXX9Qvf/lLlZSU5Lsc
      AMibSf97APF4XC+99JJ27dqlrVu36vDhw5o7d64CgYAeeeQR3XbbbZ7XAAAT0aQPAADAjWX1
      EFA8HteePXtUUlKimpoaHT16VL29vRoaGtLXv/51NvgAMIFkNQBc11VNTU3qksvly5crGAzq
      rbfeUjweV3Fx8ajH5mnnAwCgLAfAlClTRv3t9/v1xhtvaOHChSouLpbjOHJd9zOf5//+bb/+
      39/2Z7O0nPjf/1Wj//NfNfkuAwDS4ulVQO+++67Wrl2bugTTsqzUYaD/dA7A7y/Mq1P9fr8C
      AeMurAJQoLK6tQqHw6qvr5frujp//rymT5+ukydPSpLuuuuuUYeAAAD5ldUAmDFjhtavX5/N
      pwQAeKQwj7UAADJGAACAoQgAADAUAQAAhiIAAMBQBAAAGIoAAABDEQAAYCgCAAAMRQAAgKEI
      AAAwFAEAAIYiAADAUAQAABiKAAAAQxEAAGAoAgAADEUAAIChCAAAMBQBAACGIgAAwFAEAAAY
      KqsBEI/H9c4772j//v2SpPb2dv3pT3/S0NBQNocBAGRBIJtP5rquampqdPDgQUlScXGxli1b
      Jtd1b/jYZDJ50+cpRK7ryrbtfJcBAGnJagBMmTJl1N/Tp08f9bfjOAW7cQeAySarAfBZLMuS
      ZVmSPg6DT25fz+8vzFMTfr9fgUBOX1IAGLesbq3C4bDq6+vluq7Onz+vRCKhwcFBHTt2TF/4
      whc0derUbA4HAMhAVgNgxowZWr9+/aj7qqurszkEACBLCvNYCwAgYwQAABiKAAAAQxEAAGAo
      AgAADEUAAIChCAAAMBQBAACGIgAAwFAEAAAYigAAAEMRAABgKAIAAAxFAACAoQgAADAUAQAA
      hiIAAMBQBAAAGIoAAABDEQAAYCgCAAAMRQAAgKEC2XyyeDyuPXv2qKSkRDU1NTp79qwaGxtV
      VFSkjRs3ZnMoAECGshoAruuqpqZGBw8elCQ1NzfrgQce0J49exSNRjVlypRRj00mkzd9nkLk
      uq5s2853GQCQlqwGwLUbeEmyLEuSVF5erpGREQWDwYLduAPAZJPVALiebduybVtdXV1auXKl
      LMtKhYLjOKnb1/P7C/PUhN/vVyDg6UsKAFmT1a1VOBxWfX29XNfV+fPndc8992j37t1atGgR
      G0YAmGCyulWeMWOG1q9fP+q+TZs2ZXMIAECWFOaxFgBAxggAADAUAQAAhiIAAMBQBAAAGIoA
      AABDEQAAYCgCAAAMRQAAgKEIAAAwFAEAAIYiAADAUAQAABiKAAAAQxEAAGAoAsAATU1NikQi
      +S4DwARDAExyL774oo4fP66f/exn/GA9gFEIgEmut7dXW7Zs0aZNm1RfX5/vcgBMIATAJLdl
      yxY9//zz+sc//pHvUgBMMATAJFdcXKxHH31UU6dOVXV1db7LATCBEACTXFFRkT766CM9+eST
      CgaD+S4HwAQS8PLJm5qa1NTUpFmzZmn58uVeDoWbmDNnjrZu3ZrvMgBMQJ7uAZw7d04bN25U
      W1ubHMfxcigAwBh5ugfguq4++ugjdXZ2anh4WKWlpXJdV5LkOM5NL0t0CvRyRce2FYvFxj39
      r/7noyxWkzs/+9YX810CgHHwNAC+9rWvaWBgQFeuXFFZWZn8fr8sy5KkUbevZwU8LcszViCg
      UCg07unPtvdnsZrcyaRnAPnj6Za2oaFBHR0dmjlzpvx+zjcDwETiaQAsW7ZMy5Yt83IIAMA4
      8bYcAAxFAACAoQgAADAUAQAAhiIAAMBQBAAAGIoAAABDEQAAYCgCAAAMRQAAgKEIAAAwFAEA
      AIYiAADAUAQAABiKAAAAQxEAAGAoAgCT0sjIiJqampRMJvNdSs709vaqs7Mz32WggBAAmHSi
      0ah++tOfqq6uTjt27Mh3OTlx5MgRbd++XX//+9/15ptv5rscFAgCAJOOZVkqLy9XMplUWVlZ
      vsvJiZKSEoVCIQUCAZWXl+e7HBQIAgCTzvDwsIqLi1VZWSm/34xF/MqVK5o5c6YqKyvV19eX
      73JQIMxYO2CU4eFhua6rWbNmKRKJ5LucnOjo6FBFRYUqKyvV3t6e73JQIAgATDpz587Vt771
      LZ09e1abN2/Odzk58Y1vfEPTpk1TNBrV9773vXyXgwIR8PLJm5ub1djYqJKSEq1bt87LoYBR
      br/9dt1+++35LiOnWMcwVp7uATQ0NGjjxo0aHBxUIpHwcigAwBh5ugcwa9Ys/fWvf1UikVAw
      GJTjOHJdV5LkOI5s277hdM5N7p/oHNtWLBbLdxk5l0nPH5zv1qHzPVmsJje23rVAt1WUjmva
      v35wUW3h4SxX5L1MesbE5GkAdHd3a+vWrfrggw8UDoc1Y8YMWZYlSfL7/anb17MCnpblGSsQ
      UCgUyncZOZdJzwNRV03dQ1msJjecpH/cfXdejRrXMyYmT7e0VVVV2rVrlxKJhKZPn+7lUACA
      MfI0AFatWuXl0wMAMsBloABgKAIAAAxFAACAoQgAADAUAQAAhiIAAMBQBAAAGIoAAABDEQAA
      YCgCAAAMRQAAgKEIAAAwVFoB8Pxvnve6DgBAjqUVAOfOnfO6DgBAjo3pEBB7AgAweYwpAD7Z
      Ezh77qwnxQAAcmdcJ4F/85vfZLsOAECOpRUA27Ztu+H/AQCFK60AWLpk6Q3/DwAoXGkfAnJd
      V7Zte1kLACCH0g6AoaEhPf88VwEBwGSRdgD4fD51dHToqaee0nPPPadEIuFlXQAAjwXSfWB5
      ebl+/vOfq6enR1OnTlUwGPzMaQ4fPqzBwUENDw/rvvvuU2lpaUbFAgCyJ+0A6O3t1UsvvaTy
      8nKVlZXpkUce+cwN+po1ayRJr732mkpKSjKrFACQVWkHgG3bmjp1qpLJpJqbm+Xz+dKa7tKl
      S5o/f758Pp8cx5HrupIkx3FuelLZKdCTzY5tKxaL5buMnMukZ9spzHmdSCTG3bebdLNcTW5k
      0jMmprQDoLKyUjU1NTp58qQ2bNiQ9jv6EydO6KGHHpIkWZYly7IkSX6/P3X7elYg7bImFCsQ
      UCgUyncZOZdJzwGrMOd1MBgcd99+X2F+CW8mPWNiSnvti0ajev3111VcXKyhoSG5riu//z8v
      yIODg1qwYEHaewsAgNxJ+61IaWmpnnjiCS1btky//e1vNTAw8JnTlJeXa8WKFRkVCADwRtoB
      MDAwoBdeeEFTpkzRf//3f2vatGle1gUA8FjaAXDy5EnFYjG9//77unDhgpc1AQByIK0AOHv2
      rI4ePaqf/OQnevzxx7Vjxw4NDw97XRsAwENpBUBfX59uv/12BYNBlZaW6tZbb1UkEvG6NgCA
      h9K6Cmjt2rV64YUXdOjQIbmuq2XLlmnmzJle1wYA8FBaAeD3+/XEE094XQsAIIcK8xMpAICM
      pf1BsHA4rF//+teaNWuWJOnJJ59M6wvhAAATU9oBYFmWvvSlL+nRRx/1sh4AQI6MKQDOnz+v
      5557TpL0ox/9iD0AAChgY/o9gJqaGl29elVz5sxRoEC/sA0A8LG0TwJfvHhRnZ2dikajampq
      Un9/v5d1AQA8lvbb+BkzZqipqUmDg4Py+XzaunWrl3UBADyWVgA4jqOioiI9/vjjam9v15w5
      c276Xf4AgMKQVgCcOHFCu3fv1sWLF7VkyRKdPn1av/vd7zgJDAAFLK1zAKtWrdJjjz2mL37x
      i/rhD3+oNWvWcA4AAApc2ieBq6qqVFpaqmeffVahUEgzZszwsi4ASEtLS4vC4XC+y8ipbPWc
      1iGgtrY2JRIJhUIhff7zn5ckua7LeQAAefXyyy/L5/Pplltu0ebNm/NdTk5ks+e09gBKS0s1
      depULV68OPUfv/MLIN9OnjypZDKpefPm5buUnMlmz2kFwPTp03XLLbfo7bff1s6dO7Vz5045
      jpPx4ACQCcdx9NWvflU7duxQLBbLdzk5kc2e0/4cwOXLl7VkyZLUD8FEo1GuAgKQVxUVFerp
      6ZFlWcYcks5mz2mfBJ49e7bKysrkOI5OnjzJV0EAyLsf//jHunDhgr773e8as03KZs9pTT0y
      MqLGxkZVVFSooqJC1dXVCoVCaU134MABBQIB3XfffRkVCgDXCwaDeuihh/JdRk5ls+e0AqC1
      tVXPPPOMNmzYoM997nOSpOrq6s+c7sCBA7r33ntVVFSUWZUAgKxLKwCWLl2q7du369ChQ7p8
      +XLaVwCFw2Ht379f/f39evDBB+X3++W6rqSPT2TYtn3D6Zyb3D/RObZtzImoa2XSs+0U5rxO
      JBLj7ttNulmuJjcy6blnKK59F/qyXJH3KsuKtP5/TR/XtIXQc1oBkEwm1dPTo87OTkUiEVVU
      VKT15NOmTdN9992nU6dOqaenZ9R3CPn9/puewLAK9FieFQikdWhsssmk54BVmPM6GAyOu2+/
      rzB/iTWTnpMjrjoGE1muyHtWwJrUPae1JJ46dUrbtm1TOBxWKBTS8PCwksnkZ063YsUKvfHG
      G2pra1NVVVXGxQIAsiett1933HGH/vjHP466L53Lj+bMmaM5c+aMrzIAgKfSCoBgMMh3/wDA
      JFOYByMBABkjAADAUAQAABiKAAAAQxEAAGAoAgAADEUAAIChCAAAMBQBAACGIgAAwFAEAAAY
      igAAAEMRAABgKAIAAAxFAACAoQgAADAUAQAAhiIAAMBQBAAAGIoAAABDEQAAYKiAl0/e3Nys
      pqYmWZalDRs2eDkUAGCMPA2AxsZG3X///fL5fF4OAwAYB08D4JZbbtHu3bvlOI6+8pWvyHVd
      ua4rSXIcR7Zt33A65yb3T3SObSsWi+W7jJzLpGfbKcx5nUgkxt23m3SzXE1uZNJzIpHIcjW5
      kXSTk7pnTwNg9erV8vv92rdvn4aHh1VWVibLsiRJfr8/dft6VsDTsjxjBQIKhUL5LiPnMuk5
      YBXmvA4Gg+Pu2+8rzFNvmfQcDBZm6Pn8vknds6dr34cffqihoSG5rqvS0lIvhwIAjJGnAXDX
      XXd5+fQAgAwU5r4oACBjBAAAGIoAAABDEQAAYCgCAAAMRQAAgKEIAAAwFAEAAIYiAADAUAQA
      ABiKAAAAQxEAAGAoAgAADEUAAIChCAAAMBQBAACGIgAAwFAEAAAYigAAAEMRAABgKAIAAAxF
      AACAoTwPgI6ODh06dMjrYQAAYxTw8sld19WRI0c0ZcoUL4cBAIyDpwFw8OBB3X333Tp27Jgk
      yXEcua6bum3b9g2nc25y/0Tn2LZisVi+y8i5THq2ncKc14lEYtx9u0k3y9XkRiY9JxKJLFeT
      G0k3Oal79jQAwuGw6uvr1djYqJUrV6qyslKWZUmS/H5/6vb1rICnZXnGCgQUCoXyXUbOZdJz
      wCrMeR0MBsfdt99XmKfeMuk5GCzM0PP5fZO6Z0/XvocffliSVFpaqsrKSi+HAgCMUU7eiqxe
      vToXwwAAxqAw90UBABkjAADAUAQAABiKAAAAQxEAAGAoAgAADEUAAIChCAAAMBQBAACGIgAA
      wFAEAAAYigAAAEMRAABgKAIAAAxFAACAoQgAADAUAQAAhiIAAMBQBAAAGIoAAABDEQAAYChP
      A6C7u1v79+/XxYsXvRwGADAOngZAPB7XmjVrdPz4cdm27eVQAIAxCnj55NOnT9d7772noqIi
      BQIBOY4j13UlSY7j3DQUnAINC8e2FYvF8l1GzmXSs+0U5rxOJBLj7ttNulmuJjcy6TmRSGS5
      mtxIuslJ3bOnAVBSUqL169dr9+7dGhoaUllZmSzLkiT5/f7U7etZAU/L8owVCCgUCuW7jJzL
      pOeAVZjzOhgMjrtvv68wT71l0nMwWJih5/P7JnXPnq59+/fvl2VZikajChToRh0AJitPt8o1
      NTWKRCK666675PcX5rseAJisPA0An8+nkpISL4cAAIwTb8sBwFAEAAAYigAAAEMRAABgKAIA
      AAxFAACAoQgAADAUAQAAhiIAAMBQBAAAGIoAAABDEQAAYCgCAAAMRQAAgKEIAAAwFAEAAIYi
      AADAUAQAABiKAAAAQxEAAGAoAgAADOVpAIyMjOiDDz7QhQsXvBwGADAOngZAY2Oj7rjjDp07
      d06RSMTLoQAAYxTw8smXL1+unp4eRaNRhUIhOY4j13UlSY7jyLbtG07n3OT+ic6xbcVisXyX
      kXOZ9Gw7hTmvE4nEuPt2k26Wq8mNTHpOJBJZriY3km5yUvfsaQA0NzfrzJkzeuSRR+T3f7yz
      YVmWJMnv96duX88KeFqWZ6xAQKFQKN9l5FwmPQeswpzXwWBw3H37fYV56i2TnoPBwgw9n983
      qXv2dEncv3+/pkyZor1793IICAAmGE/ffn3729/28ukBABkozH1RAEDGCAAAMBQBAACGIgAA
      wFAEAAAYigAAAEMRAABgKAIAAAxFAACAoQgAADAUAQAAhiIAAMBQBAAAGIoAAABDEQAAYCgC
      AAAMRQAAgKEIAAAwFAEAAIYiAADAUAQAABiKAAAAQ3keAM3NzUokEl4PAwAYI08DoL6+XgcO
      HFAkEvFyGADAOAS8fPJly5ZpeHg49bfjOHJdN3Xbtu0bTufc5P6JzrFtxWKxfJeRc5n0bDuF
      Oa8TicS4+3aTbparyY1Mei7UowBJNzmpe/Y0AK5nWZYsy5Ik+f3+1O1PPS6Q07KyxgoEFAqF
      8l1GzmXSc8AqzHkdDAbH3bffV5in3jLpORgszNDz+X2TumdPl8SGhgadOXNGhw4d0sDAgJdD
      AQDGyNO3X9XV1aqurvZyCADAOBXmvigAIGMEAAAYigAAAEMRAABgKAIAAAxFAACAoQgAADAU
      AQAAhiIAAMBQBAAAGIoAAABDEQAAYCgCAAAMRQAAgKEIAAAwFAEAAIYiAADAUAQAABjK05+E
      PHv2rBobG1VUVKSNGzd6ORQAYIw83QNobm7WAw88oEAgoGg06uVQAIAx8jQALMuSJJWXl2tk
      ZMTLoQAAY+RpANi2Ldu21dXVpalTp3o5FABgjDwNgHvuuUe7d+/WokWLFAh4eroBADBGnm6V
      p06dqk2bNnk5BABgnHzJZDKZq8Ecx5HrupKkZDIpn893w8dd7rmqyz39uSora+ZW3qK5ldPG
      PX19SziL1eTOsnkzxj1teDCq8GDhXSBw24wylYTG9/6ptXdIkbid5Yq8l0nP0YSjnqF4livy
      Xijg163loXFNWwg95zQArpVIJBQMBvMxdN7QsxlM7NlxHEn/vvDDFIU+r/kgGAAYKm97AACA
      /JoUewDNzc06evSourq6Uvd1d3dLksLhsCKRSL5Ky7pwOCzbtlP9DQ4O6urVq5Ju/Dp84pNd
      dEm6cOFCborNgu7ubh08eFBdXV0aGBgY9XmSZDKp+vr61N/Nzc0aGhoaNX1ra6sikYhaW1tz
      VnM2tLe369ixY+rp6ZEkdXR0SJJ6e3tT8/uT+ZxMJnXq1CkdPnxYsVhs1LyeKFpbW3Xw4EH1
      9fWl9fjm5mbZ9tjOk7iuq2PHjunEiROybXvCL+cnT57UqVOnUh+SvXZZ/8Qn63lbW9unpj9/
      /ryi0eiYl+2BgQH19398jnVSBMDZs2e1ePFiHTlyJLVy1NXVKZFIaN++fQoGg4rFYkomk4pE
      IhoZGVFnZ6cGBgZ0+fJlDQ8Py3VdtbW1aWBgQJI0MjKiq1evTriV6fz584pEIqqrq1MymdS/
      /vUvlZWVSfr069DX16f29nYlk0m9/vrr6urqUjwe18WLF3Xp0iXF43HZtq2WlpbUhnVwcDD1
      bxPBgQMHtGLFCkUiEbW3tysc/veJ8mQyqddee00DAwOp16Kzs1OxWEwtLS2KxWLq7u5WPB5P
      Hae9vr9wOKyuri7Ztq3BwUG1trZqIuwUnzp1SvPnz1dDQ4NOnz6t48ePK5lM6sSJEzp27JgS
      iUQq/E6fPi2fz6cFCxaov78/Na8dx9GVK1fU1dUl13VT83h4eDi1fN/ozUK2RaNR1dXVafny
      5RoaGvrUunb9POnu7lZDQ4Mcx1EkEtGlS5eUTCblOI4uXryoeDyuRCKhcDicCkbp42WlqqpK
      lZWVikQiamlpUWtrq0ZGRpRMJtXR0aErV65I+vf6PTw8rL6+PnV1denKlSvq7e2VpNS646VL
      ly5p5syZeu2115RIJEYt65+oq6tTZ2enLly4oEgkomQyqVgsJtu21draqng8ru7ubjmOo5GR
      kVHL8MjIiOLxuAYHBzU8PJx6Lfx+f+pczaQIAL/fr1AoNOqzBkNDQ/rLX/6ijRs3qr+/X2fO
      nFE8HtfRo0f17rvv6sqVK3r11Vc1ODiovXv3KhwOa2RkRG+99ZYcx9HOnTtTK91ElEgk9Mor
      r2jdunWpvq9/HS5duqTOzk4dPXpUkUgkFWiXLl1SLBbTvn371NnZqXg8rjfeeEOS9MorrygW
      i2nv3r156+1aRUVFOnz4sKqqqm747ytXrlRdXZ0uXbqkRYsWSZIuX76sRCKhN998M/W4hoYG
      SaP7O336tM6cOaO6ujr19vaqpaVFw8PD2rNnj+d9fRafz6eKigrde++9am1t1ezZs9XV1SWf
      z6dkMqnm5uZUv1VVVaqvr1d3d7emTZuWmte9vb06cuSILly4oLa2Nu3atUuStHfvXtXW1qqp
      qUnvv//+mN9pj1VRUVEqBGbPnv2pde3aeXL48GG1trYqGo0qmUzq7bffVjweV21trXbv3q1k
      Mqldu3apra1Nhw8f1qVLl1Lzdv78+aqtrVUsFlN5ebkuX76skZER7dmzR4ODg+rr69P+/fvV
      39+fWr9PnjyphoYG7d69Wy0tLanl/tp1xyuhUEhVVVVavXq1Wlpabrist7W1ad++fbr33nt1
      /PhxRaNRnTt3btSe1Cevk+M4o5bh2tpavfXWW4pGo/rb3/6mkZERvffee+rt7U3tWUyKABgZ
      GdHRo0dVXV2tadM+vgyzpKRES5YsueHuUVlZmaqrq7VgwQLdcccdKi4u1pUrV9Te3q5oNKpE
      IqHPfe5z2rBhw4T9AFsgENCdd96pixcvpu679nUoKSnR5cuXFY1G1d/fr1tvvVVLlixRcXGx
      Fi1apCVLlsiyLPX09Kijo0PDw8OSlPq3idL35s2btXLlylEb82sVFxcrGo2qublZixcvliR1
      dnaqo6NDsVjsU4+/tr/29natW7dOc+bMkSS1tLToypUrE+p7qz7ZOC9ZskTHjh1TeXm5AoGA
      mpubNW/ePElSRUWFvvnNb8p1XZ04cUK33nqrli5dqu7ubtm2Ldd1FY1GVVFRoZMnT2rBggWy
      LEurVq3S7NmzPd/L9fv92rp1qxYvXqx33nnnU+vatfOkv79fq1evVlVVleLxuPr6+tTT0yPL
      stTb26uOjo7Usrl06VKtXbs2tRczb948bdmyRW1tbWpsbNRtt92mpUuXqri4WIODg7p8+XJq
      T+/a9XvFihWaNWuW7rzzTlVUVCgej6fWnU+OKHhpcHBQxcXFN1zWq6qqVFJSkjpkcyMffvih
      pk+frrKyslHLsM/n0+bNm1VZWZl6LUpKSkZN+/8BeX2G5h2+PmoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Top 10 Bowlers with Most Wide Runs' width='384'>
      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
      9fnuG+tbb72VyZYAyMnJSYRAaWkpAI7jYFlWos/y8nJ6e3u5fv06tbW1jIyMEAgEmJiYYHR0
      lJMnTzI0NMT09DS3b9+mpaWFGzdu0NPTw8jICKdPn6avr4933nmHQ4cOcfv2bY4dOwYs0gC4
      cOEClmXdc97Bli1b7js9fvjhhykuLuZTn/oUK1asSKSkaZrcvn2bSCTC5z//eQoLC9PVwqzq
      6urYs2cPr7/++n1DaenSpZw/fz4xUxgZGaGvry+xQryfYRjU1tZSWlqKbdsUFhZSXV1Nbm7u
      rMtlUjQaJRKJEAwGGR0dZfPmzXR2dpKT87+HZH7mM59h586dvPrqqxQXF1NSUkIkEmF0dJTB
      wcFE3+fOnSMUChEMBtm8eTPr1q0jHo9nsLv7m5iYYOnSpQD3bODk5eXx6KOPUllZSX9/PytW
      rGDfvn2JrcH3v5bvzhbi8TgbNmygpqaG0dHRTLX0oe72NttMbOXKleTn57N582ZmZmbo7e0l
      FosxNjaGbdts2rSJoqKiD6zPK1asoKOjg5UrV6arnfsKBoM8+eSTVFdXc/ToUYBEUD/66KOJ
      n4E7u3geeughmpubWblyJRMTE/T29mJZFo7jsHr1aj75yU9SXV3N2NgYt27dore3l9raWrZu
      3crQ0BBFRUVs3Lgx8V72/wE4DFADJHvBgAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Top 10 Bowling Performances (Most Wickets in a Match)' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXBV533/8c+5m/aFVSAQmwGbxWzBBVs2BrPEOMQJbWrPtDNO3PbXNj9n
      0kk7biaN23qaabrMxG6cXzNp7G6ZNp56jFcMxoCNxGL2fZFABiSEFhBo3+49y+8PqhsUsM2V
      dHSv9LxfM5mYe+9zz/fROff53POc5Vqe53kCABgnkOwCAADJQQAAgKEIAAAwFAEAAIYiAADA
      UAQAABiKAAAAQxEAAHx37do17d69Wx9//LEuXbqkRC4/amlp0caNG32szlwEAADfHTt2TK+9
      9prOnTunv/zLv9TZs2clSbFYTLFY7DPbtre3a9euXZIkz/PU1dXle72mCCW7AABmmDVrltau
      XatTp04pFotp165d+vd//3d5nqc//MM/1KFDh7R06VLV19dr27Zt+od/+Ad973vf07e//W1J
      UkdHh5577jkFg0FNmTJFjz32mF555RVduXJF3/zmN7Vo0aIk93DoIQAADIodO3bo9OnT8jxP
      EyZM0CuvvKIf/vCHisVi+qd/+ic9/vjjOnDggK5fv66srCyVlZUpPz9f4XBYknT48GGlp6fr
      a1/7ml566SU9+OCDOnnypF588UVNmzYtyb0bmpgCAjAo1qxZox//+MdasGCBSkpK5HmeAoGA
      gsGgPM/T3LlzdebMGUWjUS1YsECvvfaaFi9eHG/vuq6amppUU1OjJ554QqFQSIsXL2bw7wf2
      AAD4LhAI6L333tOBAwfkuq6ee+455eXl6fvf/748z9NTTz2l/Px82batwsJCfeELX9DPfvYz
      fetb35LrugqFQlq0aJH+53/+R3v27JFlWZo8ebJCIYaw/rC4GyiAZOno6JBlWcrIyLij13ue
      p87OTmVkZMiyLJ+rG/4IAAAwFMcAAMBQSZlAi0ajvS4ECQaDySgDAIyW9Ckg27Y5kAMAScAU
      EAAYyvev3rW1tdq1a5csy9KyZcs0duxYvxcJALgDvgaA53kqLS3V+vXrFYlE/FwUACBBvgdA
      bW2ttm7dKsdxtGLFCuXk5Pi5SADAHfL1GIBlWRo3bpzWrFmj3/iN39DOnTv9XBwAIAGDchC4
      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
      h3wNANu2lZaWJknKzc1Ve3u7n4sDACTA1wAIhULq7u6WJDU2Nio3N9fPxQEAEuD7FFBeXp4+
      /PBD7dixQ3PnzvV7cQCAOxTy880ty9KqVat09epVLVmyRJmZmX4uDgCQAF8DQJKCwaDGjRvn
      92IAAAmyvCScnB+LxeL/7bru7V9jOzpzsX6wSkrYpIIRys/JSKhN2cV6RW3Hp4r6Z1RupiaM
      zU+oTV1ju1o7oj5V1D8jctI1Ojex9eO4ns7Xpu6pygUjspSbGUmozcX6FsVSdJvLzYyoYERW
      Qm3qmzrU0t7tU0X9Ew4FNKUgL6E2LR1R1Tcm7+SYpATAzYO+bduKRBLbqFNZLBZTKBSSZVnJ
      LmVAOM6NwSMYDCa5koFh27YCgYACgeFzETzbXGrzPE+2bSscDie7lFv4PgV0Ozd/+Ibb1cHD
      sT/DZWDpMRzX0XAz3PqUqv1JSgDcbLikfI/h9M1SGn79sSxr2AXacPsMDcd1lKqfo6RMAQEA
      ki81Y+k2Kisr9cknn8T/XVNTo9OnT8vzPB06dEjNzc2SbuxqHT9+XFeuXIm/try8XKWlpTp0
      6JC6urpueW/P83odmP51hw4d+szn+6Orq0slJSXauXOnzp49G99V9DxP58+fl3RjTrSsrMyX
      5Q+0aDSq3bt3a+fOnbpw4UKvXd/Tp0+rpKRE+/btU1tbmyRp//79n/l+sVgs/h6ffPKJOjs7
      /Sv+11RVVamkpER79+6N19vDdV3t2LEjfqHjrztw4MCnnuBws87Ozl7bdaqJRqP6+OOP49u/
      67r6+OOPB3U9fBbXdXXx4kVJNz4z+/btU2NjY6/XVFRUqLKyMv7vqqoqnTt37nPf+8CBA585
      dbNv376+FX0Hjh07ptraWkk3+rVr1y6VlpbqxIkT8WMkknT27FmVlpbq1KlTsm1b0o3+3m6c
      +/XaPc8bOgHQ01HXdeV5nvbv369jx45Jko4cOaKDBw9KuvGBKi0tVVVVVbztiRMnNHfuXOXl
      5endd9+V53nq6upSW1ubXNdVd3e33n33XXV0dMh1XTmOo5aWlvgftL6+/o4+zH3R3t6ujo4O
      zZkzR5WVlb0G+qNHj8rzPL3//vvKyMiQbdvyPC8eWK7rKhqNqrW1VbZtq729Pb7ibdtWa2tr
      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
    </thumbnail>
    <thumbnail height='384' name='Top 10 Highest Individual Scores in a Single Match' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXDU933/8dde6AQd6AAE2BIYJBSMDVhgYzS4xdjj2BM3uM3v12mm6dj1
      ZJKZNP71SNLGqaeETlu3aePWSetpJ394Wo/dkMYxPjgCFIMIiFvosAToFjpX10p77/7+0GiD
      zOFF7CHp83zMMGil7+7n/dn97uf1/XyPXUs4HA4LAGAca7ILAAAkBwEAAIYiAADAUAQAABiK
      AAAAQxEAAJBE4XBYHo/ntsv4/X4Fg8GYt00AAJjTXn31Ve3evVsvv/yyBgcHp/ytvb1dp0+f
      Tlgtly5d0uXLl6f8zufz6dVXX53yu+bmZh04cCBy+91331VNTU3M67HH/BEBYAZxOp3avXu3
      fvSjH6mtrU0fffSRrly5ooqKCtXX16uurk4ej0cNDQ3q7+/XU089paNHj8rpdMpqtcrj8aiy
      slJLly7Vu+++K6vVqpdeekm7du1SOBxWZWWlduzYofr6er3zzjtyuVwqKipSd3e3du3apf/4
      j/9Qd3e3Pv/5z2vPnj3y+Xz6yle+otraWl25ckU7d+5UXV2d/uIv/kLbtm3T448/LofDIZvN
      pp6eHv34xz9Wd3e3Vq5cGfPnhhkAgDnN7/dr9+7damho0NKlS1VeXq6ioiJ98MEH2rZtm7Zv
      365HH31Uly5d0po1a7RixQp1d3fre9/7nsbHx/Xtb39bp0+f1uLFi1VcXKy6ujr19fXJbrfr
      O9/5jk6dOiVJGhwc1MaNG7Vx40Zt27ZNBQUFGh4e1rp165Sfn68DBw5o27Zt2rlzp4qLi9XY
      2Kjvfve7KikpUWlp6ZTHGhsbU2dnp37605/qy1/+srZv3x6X54YAADCn2e12ffWrX9WGDRt0
      7tw5/fu//7uefPJJpaamym63q7e3Vz6fT1/72tckSW+//bYsFoskyWazyWqdGCbffPNNlZWV
      qbi4WOFwWFarVTabbUpbFotFVqs18m98fFw/+9nP9NRTTykUCslut6unp0cWi0Wjo6MaGRmR
      y+W66WNNtj88PKyhoaG4PDe2V1555ZW4PDIAzACBQEAnT55UXl6eduzYIZ/Pp7q6Oq1bt04b
      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
      mxoaGnTq1ClJEwFVVVUl6ddj0+RH7vT09Mjn88ntdqurq0ter1cdHR1qaWmZsgE94wOgp6dH
      paWlmj9/vgoKCiRNbJ0eO3Ys8sJ4vV7l5uYqGAxGBqv29nb5fD4dOHBAJ0+elMvl0vHjxyPp
      fO7cOQ0ODurIkSORN4TX61VGxsRZLMuWLVNnZ6dqa2t1//33S5JaW1vV3d2ts2fPyu12a3R0
      VH6/X3v37pXL5dLQ0JBaW1vl9Xp19OjRqPpXU1Ojc+fOacWKFQoEAjp37pyampq0dOnSyDKf
      rmXyRXa5XOrt7dXChQuVk5OjwsJCnT9/Xh6PR42NjZFBedKn//buu+/K4/Hov/7rvzQ6OhpZ
      sTo6OnTvvfdKklatWqUrV65oeHhYubm5kiYGeZ/Ppw8++EAej0dut1sul0tVVVXq7e1VT0+P
      XC6Xuru7pwxyknT16lU98MADkS0/t9utc+fOaWBgQDk5OZIm3iDt7e3yeDwKh8Pat2+ffD5f
      ZGUvLS1VY2OjhoaGlJOTo/7+fvX29k5px2KxqK6u7obX+T//8z/ldDq1b98+eb3eyNZUY2Oj
      ysrKJEnr1q3TxYsX1draqpKSEkkTIeL3+/Xhhx/K7XZrfHxc4+Pj+uUvf6mRkZHI1tzw8LAO
      Hz48pZba2lp96UtfigwAfX19On36tBYsWBBZZt++fXK73fJ4PBoYGIjMBCdnRmVlZWpoaNCl
      S5d0//33q66u7oYz5yafh0OHDikcDuvgwYPq6OhISp9vxeFwqLCwMPJZYPX19Tp27NiUrVO/
      368lS5aotrZWoVBoyvrW09Oj2tpatba2Rt7rN3u+GhsbtWbNmlv27frxIVZ9k6T8/Hw5nU4F
      AgHNmzcv8hotWrRIvb298vv9mjdvnrxer65evarW1la5XK4p9TQ0NKirq0vnz5+PvE+uH5vm
      z58vl8ultrY2FRcXS7pxbBoaGpLb7daHH36o4eFhud1uXb16VaOjo6quro7UNOMDICUlRWNj
      Y1N+t3HjRm3atEnz58+XNLGl5/F4lJeXp/T0dLlcLnV2dqqnp0der1ebN29WdXW1fD6f0tPT
      JSmS7CkpKRofH5ekKW+o1atX65NPPom8kJNb3B6PR0NDQyooKFBxcbFSU1OVl5en1atXKzc3
      VyUlJVq1alXUZwRUVFSooqJCly9flsPh0MMPP6x169bp6tWrt6zF7/dH2szPz49sJdypJUuW
      aPXq1SouLlZZWVkkHD0ej1JTUyPPicViUU1NTSQI+/r6dO3aNY2NjSkvL08FBQVatmyZxsfH
      df/996ukpESZmZlau3atFi5cOKXN2tpatbe3q729XWNjY8rIyNDDDz+s5cuXR2YAw8PD2rBh
      gxYtWiSfz6fBwUH19fVFnlObzRaZSUzWdCuffp23bt2qlStXqqysTFevXo289l6vN9LntLQ0
      eTweNTc3a8WKFZImQu/atWvyer2RAWxyECsrK9OyZcuUl5ensrKyKQO7NLE1ev1ursWLF+uR
      Rx6Rx+OJbHzMmzdPq1atUnZ2trq6uhQIBBQKhSKv7fLly9XR0SGn06m8vLzb9nly18PkDCgZ
      fb6VT+/Su++++7Rp0yYVFRVNWWbevHlat26drly5MmV9KykpUWtrq5qamlRaWipJN32+QqFQ
      ZH25Wd+uHx9i1bdJaWlpOnv2rMrLy6f8ft68eaqpqYkE0/Wur+fBBx/UhQsX1N/fH6np+rFp
      3bp1unDhQuT1vX5sGh4eVkFBgVatWqXx8XGtXr1aZWVlSk9PV2lpqcrLyyN7UAKBgP4/tnhs
      VKojlX0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Top 10 Players by Man of the Match Awards' width='384'>
      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
      vXvV1dX1pft/Pk2PxWI6c+bMCFV95fr7+3X06FFJUjwe1+7du9XU1JTu8Ysutb4cx9H58+cl
      ST09PRoYGNDZs2fV1dWlzs7O9H1G42Pweb9Hjx7VF7fNmpqa0n9/sb9Tp07Jsiwlk8n/+dwe
      zf77eZtIJLRr1y599tln6eOGiURCO3bs0KFDh+Q4jpqbm3NZctY1Nzdr+/bt6uvrU0dHhyzL
      UjweT7/OW1patHv37ks+b794uyuR9wGwc+dOJZNJ1dTUyLIs7d+/X5J07ty59JPp2LFjOn36
      tK699lr19/enX0BdXV1KJpOKx+OSpL6+vvSDOzAwoNOnT2s0TZBOnz6ttrY2bdu2TT6fT/v3
      71cymdSmTZs0btw4SdKJEydUU1OjDRs2yLIstbe368KFC0qlUnrvvffU1taWfkP8/M0jHo8r
      FAopHo/Ltm1FIpH0/3Jh3759+uyzz+Q4jsLhsBKJhKqrq/Xxxx+nbxOPx3XmzBmdPn1a0sX1
      HQ6HJUkej0d79uyRJO3fv1+BQEB+v1/hcFi9vb3pdfz5vtuurq70hkN/f7+i0aji8bhaWlrS
      yxwp4XBY8XhcPp9Pa9askSRduHBBO3fuVEdHR7q/ffv2SZIaGhp08uRJnThxQpFIRJFIRGfO
      nJHjOOrv71cikVAkEkk/tz/fKPri49Xf35/z8Pji8zaVSmnNmjWqqalRWVmZEomEJGnjxo2a
      O3euCgsLlUqlFAqF0j3Ztq2zZ89+qadYLKbu7m61tbWpq6sr/Rh+/roYLdra2tTa2qr58+cr
      HA7ryJEjSiQS+uijj1RcXCxJOnDggObMmaNTp07p1KlTg163Ho9HPp9P/f396unpST+fv/h8
      uJS8D4Du7m7V1dWpoqJCwWBQLS0t2rx5sw4cOJC+zcmTJ7Vs2TIdOXJEAwMDikQi6u7u1ubN
      m9XT06NPPvlEqVRKW7ZskXRxC+vDDz9UIpFQY2Njrlr7kltvvVWbN29Wf3+/KisrFY1G9c9/
      /lP33HNP+owqr9ergoIC+f1+JZNJtbS06ODBgzp58qQGBgbU09Mjx3HSbxg7d+7UuXPnlEwm
      9cEHHygajWr16tWKRqPasWNHTvqMRqOqq6tLv7mfOnVKO3fu1NSpUyVdnMm89957SiQSSqVS
      2rt3r7q7u9XQ0KBU6uLZNUVFRRoYGNDUqVPl9/t16NChL41z6NAhdXZ2avfu3WpublYoFNK/
      /vUvNTY2qqmpSWfPns3JLKGoqEhXX321gsGgbNvWwYMH9dhjj+mzzz5L38bj8Sgajaq2tlZn
      zpzRmTNnNH36dIVCIfX19amhoUGNjY1au3atYrGY3n77bfX39+uTTz750uP117/+NT3jyhXH
      cWRZljwejxKJhMrLy2VZVvo5IElTp07Vp59+qmAwqEAgoHPnzqm/v18NDQ3q7OxUf3+/1q5d
      K8uy0j0dOHBAhw4d0oYNGxQKhbRx48ZBr4tTp07lrukvKC0tVUtLi06cOKHJkydLktasWaO5
      c+emA0CSbNuWZVny+/2DXrfxeFwnTpxQY2OjTpw4oU8//TQdkp8/Hy4l7wMglUoNSrcpU6Zo
      yZIlqq2tTV/n8XiUTCZ1/fXXKxQKKRKJ6Ny5c0qlUun03Lt3rxYtWiTp4lSzu7tb7e3to+qs
      Bp/Pp8rKSi1evFjSxTeKefPmDXqT6u7uVlNTk2677bb0VmwymVR/f78mTZqk+fPny+/3q7a2
      VnV1dYrH42ptbdX58+fTM6Ha2lotWLAgfXkkRaNRnTlzRi0tLek3vPnz5+u22/E/yXQAAAEj
      SURBVG5TS0uLpIu7dWbPnq2rr75aBQUF6S31YDCY3sK97rrrtH///vSukstpaWlRKpWSbduK
      xWIqLy/Xfffdp7q6OvX09OR0KzGVSsnr9SoUCmn37t0KhULp/1VVVWnTpk2qra1NP/8/v21X
      V5disZg8Ho8eeOABTZw4UdOmTdP8+fNVVFT0pcertrZWS5cuzVWbki5usX/00Ue65pprFAwG
      FYvFVFlZqaKiIkWjUUnSggULtGLFivSuos97KiwsVFdXl1paWhSLxZRMJgf1dN1112ny5Mm6
      /vrrVV5erv7+/vTrord3dJxuXlhYqEcffVTl5eXpN+sbbrhh0Dq3bVt79+5VNBrVtGnTvvS6
      lS6+R9x4442qqqqSZVmDng+X8v8B+5RKTzW4s58AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Top 10 Run Scorers' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Top 10 Umpires by Matches Officiated' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Total Bowled Wickets by Teams' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Total Catches by Teams' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3de3Qc9WH28e/u7GqllS3jm642siXZlhG+yWA7dixD4hoOpW2SEuhJ39CW
      EpJAaE/JSWg4b9pwKP0nl55wTgtv+57mTWloQ4ECNg7Y8k22FWQjMBaWJcuWdb9fLa2k1e7s
      vH842lqRDLv2yrtins85HLyr0fyeXc3MMzM7u+uwLMtCRERsxxnvACIiEh8qABERm1IBiIjY
      lApARMSmVAAiIjalAhAR+RhjY2OEQiHGx8fjHSXmVAAiIldob2/n/vvvp6OjA4C/+7u/o66u
      jl/+8pcAHDlyhO9+97v8xV/8Rfi+2coV7wAiIonkyJEj3HPPPZSVlXH//fdP+fmOHTuYO3cu
      tbW1PPDAA7z++utUV1ezY8cO5s+fzxtvvIHT6eSv/uqvePrppzFNk8WLF9PR0cGjjz7KgQMH
      6Onp4Z577mHt2rVxeIT/Q0cAIiJXqKioYN26dZSXl0c0/euvv87WrVt5+eWXycrKYvny5VRX
      V9Pd3Y3H4+Hhhx/mpptu4t577+XcuXN89NFH3HLLLeTn58/wI/lkKgARkd8YHBzENE0aGxsZ
      Hx9naGjoE3/HMAzmz5/P/fffz4svvsjq1atZvnw5lmXhcDhwOp3h/wAeffRRgIQ4fWT84Ac/
      +EG8Q4iIJIKuri7WrVvH9u3byc3NxeFwkJaWxvLly/F6vWRmZoannTt3Lunp6eTl5XH48GEW
      L15McXEx+/fvJy8vj6KiIpKTk8nNzSU5OZnMzEzmzZvH+++/T3NzM1/4wheYO3duHB8tOPRZ
      QCIi9qRTQCIiNpUQBWCaZrwjiIjYTkIUgIiI3HgqABERm1IBiIjYlApARMSmVAAiIjalAhAR
      sSkVgIiITakARERsSgUgImJTKgAREZtSAYiI2JQKQETEplQAIiI2pQIQEbEpFYCIiE2pAERE
      bCrmBXDhwgWOHTuG3+/H5/Nx/PhxBgYGAGhoaODkyZPoWyhFROIvpgXQ2NhIT08PGzduBODg
      wYOsX7+eQ4cOMTw8TE1NDdnZ2ZSXl8dy2EmOHj3KK6+8wvvvv4/P5+Pf/u3fOHLkCADvvvsu
      L774IoFAYMbGFxGZLVyxnFltbS0ul4uysjK2b99OSkoKqampzJ07l5aWFoqKisjJyeHs2bMA
      4Q1xKBQiGAzGJMPhw4d58MEH8Xq9PPfcc/zxH/8xr7/+OsFgkOrqau666y5++tOf8vjjj8dk
      PBGR2SqmBeByudi+fTt+v5+TJ08SCoWAy9/5m5SUxNjYGJZlhe93u93hnxuGEZMMjY2NvPrq
      q3zpS1/iM5/5DM899xzDw8PcddddVFVVkZqaSl9fHx6PJybjiYjMVg4rhifke3t7KSsrIyUl
      hdWrV9PQ0ADA2NgYO3fu5NVXX2XOnDmsWrWK/Pz88O/FsgAAgsEgzzzzDKmpqTz22GOUlpay
      dOlSTNOkubmZqqoq/vZv/zZm44mIzEYxLQC4vPE1TTO8hz06OkpKSgpw+VRPIBCYsvcdqwIY
      GBjg+eefJy0tDY/Hg2EY+P1+Ll68yLe+9S327t3L4OAg27ZtY9u2bdc9nojIbBbzArgWsTwC
      CIVCjI6OkpqaCsDw8DDJycm4XC58Ph9OpzNcSCIidvapKwAREYmM3ggmImJTMb0KKNb+8ZUy
      /umVsnjHAODR+0p47L6SeMcQEYkZHQGIiNiUCkBExKZUACIiNqUCEBGxKRWAiIhNqQBERGxK
      BSAiYlMqABERm1IBiIjYlApARMSmVAAiIjalAhARsamE/jA4u3nmmWeYP38+RUVFeL1e9u3b
      x/z58/nqV7/KP/3TP5GUlMSSJUt44IEH4h1VRD4FVAAJxDAMvva1r+HxePjnf/5nHnroIbKz
      s3E4HHzve9+jo6ODF198Md4xReRTQgWQQHJzc3n++edJTU1l69at7Nu3j1OnTvE3f/M3nDlz
      hl/84hd88YtfjHfMKSoqKsJHK3/2Z39Gamoq3/nOd7jvvvvo6+ujuroav9/PU089Fe+oInIF
      vQaQIHw+Hzt37uTxxx+nvb2d1NRU/vRP/5SSkhLq6uooLi7mhRdeoKKiIt5Rp/jwww956KGH
      eOyxx0hNTeWNN95g9erVjIyMcObMGb797W+zcuVK6urq4h1VRK6gI4AE4Xa72b17N4ODg3z1
      q19lcHCQf/iHfyA9PZ2ioiJ+9rOfYZpmQh4BXHm08vjjj1NXV8eOHTsYGBigsLCQH/3oRzQ3
      N5ObmxvvqCJyhYT+TmB9I9jscPHiRZYtW8Zrr72G2+2mp6eHpqYmAoEATz/9NC6Xix/96Ec8
      8sgjpKWlxTuuiPyGjgDkul15tPKHf/iHALS3tzM2Nsb777/P8ePH2bx5szb+IgkmpgXQ39/P
      wYMHWbBgAcXFxXz00UeMj4/j9XrZtGkTe/bswbIsNm3aRGZmZiyHTjiVNc1U1rTEOwYAGwuX
      sLFw6YzNf/369axfv37SfVlZWQAsX76cTZs2zdjYInLtYloA7e3trF+/nry8PBwOB8PDw9xx
      xx14PB6amprIz8+nsLCQ0tLSSQVgWRbBYHDK/EKhUCzjXZdQKDRtxqs5Wd3E/92dGC/YPhza
      zLqCrHjHEJEEE9MCSE9Pp66ujlOnTvHZz36Wm2++mYqKCnp7eyksLCQtLQ2n04nD4QAgEAgA
      lwvA6dQFSYniX954N94Rwr72B1viHUHkUyumBeBwONi8eTPNzc10dHSQk5PD6tWrefPNN8nI
      yKC6upp58+bhcl0e1u12A1d/ETiRSsHpdIZzRzp9oog2+7++dXIG00Tnm3/42XhHEPnUimkB
      hEIhDh48SFJSEp/97Gepqqri1KlTFBYWsmDBArxeLxUVFZSU6GoaEZF4i2kBLF68mJ07d4Zv
      r1u3btLPi4uLYzmciIhch8Q5TyEiIjeUCkBExKZUACIiNqUCEBGxKRWAiIhNqQBERGxKBSAi
      YlMqABERm1IBiIjYlApARMSmVAAiIjalAhARsSkVgIiITakARERsSgUgImJTKgAREZtSAYiI
      2JQKQETEplQAIiI2pQIQEbEpFYCIiE2pAEREbCqmBRAIBKisrKSyspLh4WF8Ph/Hjx9nYGAA
      gIaGBk6ePIllWbEcVkRErkFMC6CtrQ3DMCgoKCA5OZmDBw+yfv16Dh06xPDwMDU1NWRnZ1Ne
      Xh7LYUVE5Bq4YjmzoaEhWlpaGBoaYtu2baSkpJCamsrcuXNpaWmhqKiInJwczp49C1w+YgAI
      hUIEg8Ep8zOnuS9ezGAQv98f8fRBM3GyB83osieS2ZpbZDaIaQHceuut3HrrrTQ0NHD69GlC
      oRAApmmSlJTE2NgYlmWF73e73eGfG4YxZX6GK6bxrovhcuHxeCKe3mUkTnaXEV32RDJbc4vM
      BjHdStXW1tLW1kZ/fz/bt29ncHCQI0eOAJCbm8urr75KXV0dq1atiuWwIiJyDWJaAKtWrSIv
      Lw+n04lhGOzYsYPR0VFSUlIAuO+++wgEAtqrExFJADE/TzFxWmfCxMYfwOl0auMvIpIg9D4A
      ERGbUgGIiNiUCkBExKZUACIiNqUCEBGxKRWAiIhNqQBERGxKBSAiYlMqABERm1IBiIjYVOJ8
      ZKVInPzwhz/Esiwee+wxnnnmGUpKSli1ahX79u1j0aJFHDt2jJ/+9KfxjikScyoAsbWysjI2
      bNhAVVUVBw4coKCggKGhIZYsWcI3v/lNLl26xHvvvRfvmFc18Y1799xzD3//93/PvHnz2LVr
      F/X19VRXV7Nlyxa2bt0a75iSoHQKSGxrfHycf/mXfyEUClFbW0t7ezsFBQVs2LCBF154gZqa
      Gp599lmeeuqpeEed1sRXrp47d46WlhZWrFjBt771LVauXMmpU6d44oknKC0tjXdMSWAqALEt
      wzD4wQ9+QH5+PosWLeJzn/sc7777LqOjo3i9Xp577jm+8pWv0NzcnJDfY/3CCy/wjW98A7j8
      7XoXLlzg6aefpr6+noGBAV5++WWqqqrinFISmU4BiW0ZhkF+fj4AX//611m6dClf/OIXuXDh
      Ag899BDvvfce/f39cU45vdHRUfr6+njppZcoLy/nj/7oj/je977H6Ogozz//PM8++yzd3d3U
      19fHO6okMBWACLB06VLg8pcaTXxj3ebNm+MZ6WOlpKTw7LPPArBw4UK6u7t58cUXGRsb48EH
      H+TVV1+lsbGR22+/Pc5JJZGpAERmuS9/+csArF27NnzfsmXL4pRGZhMVgHyqfOeF/fGOAEBe
      9ny++fu3xTuGyMdSAcinyun6znhHuCbDo+NcaEuM1xvmpLjJz14Q7xhyA6gARBLAhbZ+vvt/
      EuPoZW1eBj/8xu/EO4bcALoMVETEplQAIiI2FfMCGB8f56233gKgurqaQ4cOUVFRAUB5eTnv
      vPMOIyMjsR5WRESiFPMCOHr0KKZpAtDW1sadd97J5s2b6e7uxjAMSkpK+PWvfx3rYUVEJEox
      fRG4sbGRRYsWhd827/F4KC0tJSkpicWLF5OTk0NKSgqhUAi4/PZ1gFAoRDAYnDI/c5r74sUM
      BvH7/RFPHzQTJ3vQjC57IpmtuUOhUFTZJ9aFRBBtdpm9Yl4AABcuXGDZsmVs3boVwzDYu3cv
      +fn59Pb2kpWVFZ7e7XYDYJomhmFMmZ/hSpyLlAyXC4/HE/H0LiNxsruM6LInktma2+l0RpV9
      Yl1IBNFml9krplupkpISAFJTUykoKODw4cMEg0Hmzp1LdnY2VVVVNDQ0sG3btlgOKyIi12BG
      dlM3btwIwB133DHp/rvvvnsmhhMRkWugy0BFRGxKBSAiYlMqABERm1IBiIjYlApARMSmVAAi
      IjalAhCRuDh+/Hj4c8P27dvH22+/DcDbb7/NT37yE8rLy+MZzxZUACJyw/l8Po4fP865c+fo
      6uoiOTmZmpoaAE6dOsUTTzxBaWlpnFN++qkAROSGe+GFF/jGN74BQHp6evhTBAAGBgZ4+eWX
      qaqqilc821ABiMgNNTo6Sl9fHy+99BLl5eV0d3dP+vmzzz5LSUlJ+BMFZOYkzieWiYgtpKSk
      8OyzzwKwcOFCfD4f//3f/01TUxNlZWV0dHTQ2NjI7bffHuekn34qABGJmy9/+csAPPLII3FO
      Yk86BSQiYlM6AhCR6zI8Ns7FjsF4xwAgNdlNXuZN8Y4xa6gAROS6XOwY5H//v6PxjgHArcsW
      8eyflnzyhALoFJCIiG2pAEREbEoFICJiUyoAERGbUgGIiNiUCkBExKZUACIiNjUjBTA8PAyA
      ZVl0d3cTCoUAGBsbo7+/fyaGFBGRKMW8AOrr6/n5z38OQGlpKc3Nzezdu5dAIMDu3bs5ffo0
      Z8+ejfWwIiISpZi+EzgQCFBbW8uqVauAy0cAxcXF9PT00NjYyMaNG8nLy2Pfvn2sXr0a0zQB
      ME2TYDA4ZX7mNPfFixkM4vf7I54+aCZO9qAZXfZEMltzh0KhqLIHAoEZTBMdO2W3u5gWwP79
      +1m0aBF1dXW0t7fjcDgAcDgcmKaJ2+0O376S0+nE5ZoaxZjmvngxXC48Hk/E07uMxMnuMqLL
      nkhma26n0xlV9ol1IxHYKbvdxXQrtW3bNsbHx2lvb2fu3Lnhf/t8PpYuXUppaSmjo6PcdNPl
      D2syDAMgfCQgIiI3TkxfA5g3bx6LFy+mpKSEOXPmsHPnTrq6uti1axder5fNmzdjWRa33XZb
      LIcVEZFrMCPnKebPnw9cPnxft25d+P6MjAwyMjJmYkgREYmS3gcgImJTKgAREZtSAYiI2JQK
      QETEplQAIiI2pQIQEbEpFYCIiE2pAEREbEoFICJiUyoAERGbUgGIiNiUCkBExKZUACIiNpU4
      31oiIjIL+P1+mpqayM3NJSkpiZ6eHizLIi0tDdM08fl8uFyu8KciJzIdAYiIROGVV17h3Llz
      PPnkk/h8Pr7//e9z4MABOjo6+Md//EcOHDhAeXl5vGNGJKICqD1XO9M5RERmhT/4gz8gNTWV
      9PR06urqSE9PJz8/n5tvvpmenh7S0tLYsmVLvGNGJKIC+MlPfjLTOUREZoWxsTE6OzsxTZNb
      brmFP//zP6e9vZ2XXnqJ73znO+Tn5/P000/HO2ZEojoFpCMBEbG78vJytmzZwsDAAFVVVbS2
      tuLxeDAMg8OHD+N0OnG73fGOGZGoCkBHAiJid4WFhXzwwQf85V/+JRs2bCAQCOD1ennggQfY
      unUrtbW1PPnkk/GOGZFrugroxz/5Md9+4tuxziIikvBWrlzJypUrw7dLSkrC/87OziY7Ozse
      sa5JREcAEw/2ygctIiKzW0RHABN7+7/9fxGR2ayx6xK/OJIYr23evHgu/+uOwhs6ZkzfCNba
      2kp1dTWWZbFjxw4uXLhAZ2cnXq+XzZs3U15eztDQENu3b8fr9cZyaBGRqI34g9S09Mc7RtzE
      tADS09PJycmhrq6Oixcv0tbWxs6dOwHo7u7GMAxKSkooLy/n85//fCyHFhGRKEVcAMPDw5SV
      ldHd3U1DQwNPPfXUlEud3G43paWl1NXV8cgjj9Dd3U1paSlJSUksXryYnJwcUlJSCIVCAAQC
      AQBCoRDBYHDKmOY098WLGQzi9/sjnj5oJk72oBld9kQyW3OHQqGosk+sC4lA2eMj2uyxEHEB
      DA0N0dXVxeDgIEVFRQwNDbFgwYIp0+3cuZNbb72VyspKtm7dimEY7N27l/z8fHp7e8nKygpP
      O1EgpmliGMaUeRmuxPmoIsPlwuPxRDy9y0ic7C4juuyJZLbmdjqdUWVPpOvGlT0+os0eCxFv
      pbKyssjJyWHXrl20t7dPu/E/c+YM7e3tjI+Ps2XLFo4ePUowGGTu3LlkZ2dTVVVFQ0MD27Zt
      i+mDEBGR6EVcAIFAgLNnz3L27FkyMzNZt24drt/aQy8qKqKoqCh8+4477pj087vvvvv60oqI
      SMxEXAAXL16kqKiI3t5exsbGGBoamhUfdyoiItDc3Mwvf/lLQqEQDz74IIcOHYq8AAoKCjh6
      9Cjnzp1jxYoV2viLiMwiixcv5tvf/jYtLS289dZbfOUrX4nuMtCsrCzmzZsHQDAYnHIKSERE
      ElNycjI///nPefnll/n3f/93Ojs7I/8wuKamJhobG9mwYQMbNmzA6dR3yYiIzCZ/8id/wi9+
      8Qv+9V//lWXLlkV2BFBbW8upU6eor6+nsrISgNzcXJWAiMgs8e6773Ls2DFM0+Suu+7ixz/+
      cWQFkJmZyebNm1m3bh3JycmMjIxo4y8iMots2bJl0jeVrV+/PrJTQPPmzcPpdHLu3DmWLVvG
      +++/z9DQ0IwFFRGRmRfxq7iLFi2isrISwzCoq6sjNTV1JnOJiMjHaOoZYtR/fR85E3EBuN1u
      vva1r9HX18f69etxOBzXNbCIiFy7Xx47z7m2geuaR0SngCzL4vz58xw8eJDMzExeeeUVBgcH
      r2tgERGJr4iPAA4ePEhDQwOWZVFUVDTtZwGJiMjsEVEBOBwOHn30USoqKujo6GB4eFhvBBMR
      meUi3oJ3dnaGXwQ2TRPLsmYyl4iIzLCIL+ZPTk4On/bp6+vTZaAiIrNcxEcA8+bN43d+53dI
      SkqitrZWrwGIiMxyER8BNDY2UlFRQVpaGnV1dfT32/eLlEVEPg2i+kawn/3sZ3R3d9Pc3Bz+
      VFAREZmdIi4Aj8fD97//fbq6usjMzNRnAYmIzHIRbcW7u7sZHx/n0qVLZGdna+MvIvIpENER
      wIEDB5gzZw719fWUlJQAsHbtWhWBiMgsFtEW/Etf+hKWZTE+Pk5nZyednZ16H4CIyCwXUQEk
      JSXxe7/3exQVFfHBBx+QlJSEYRgznU1ERGZQVJeB9vT08OSTT1JbW0tPT8+00/X19TE8PAxc
      /hC57u5uQqEQAGNjY7p8VEQkQUR8FdBNN93EhQsXKC0tpb29nTlz5kyZprGxke7ubrq6uliz
      Zg01NTUsXLiQiooK7rrrLnbv3k16ejrp6emsXr06pg9ERESiE9U7gZ944gnOnTvHd7/7XZKT
      k6dMk5ubi8vloru7G6/Xi2VZFBcX09PTQ2NjIxs3biQvL499+/axevVqTNMEwDRNgsGpX2xg
      TnNfvJjBIH6/P+Lpg2biZA+a0WVPJLM1dygUiip7IBCYwTTRUfb4iDa79ZszK9cjqo/zTEtL
      47bbbvvYaQYHB3E4HPj9/vCXxjgcDkzTxO12h29fyel0TvvJokYCfdqo4XLh8Xgint5lJE52
      lxFd9kQyW3M7nc6osk+sG4lA2eMj2uyOGFyFGfFWKhQK8fzzzzM0NMTChQt5+OGHp2zIL1y4
      wIIFCzBNk87OTsbHx2lvb8fn87F06VJKS0sZHR3lpptuAgi/kDxxJCAiIjdOxBVSV1dHbm4u
      f/3Xf83cuXPp6OiYMk1OTk749M/69evZuXMnXV1d7Nq1C6/Xy+bNm7Es6xOPIkREZOZFfASw
      fPly/uu//ouzZ88SCoVIT0+fMk1ycjJr1qwJ3/Z4PKxbty58OyMjg4yMjOuMLCIisRBRAQQC
      AQYHB/n6178e/iYwvQtYRGR2i6gA+vv7+dWvfgVcvs7/nXfe4Y033pi1L9CJiEiErwGkp6dz
      7733MjY2RmpqKv/xH/+hjb+IyCwXUQHU19fz8MMP4/F4yMjIoKysbNrr9kVEZPaI6BRQVlYW
      P/zhDyfdp9cARERmt4gKICUlhYKCgpnOIiIiN5B240VEbEoFICJiUyoAERGbUgGIiNiUCkBE
      xKZUACIiNqUCEBGxKRWAiIhNqQBERGxKBSAiYlMqABERm1IBiIjYlApARMSmVAAiIjalAhAR
      sSkVgIiITcW8AHw+H4ODgwCMj48zNDSEz+cDYGxsjP7+/lgPKSIi1yCibwSLVH19PS0tLYyO
      jrJixQrq6upYsGABycnJFBYWsnv3btLT00lPT2f16tWxHFpERKIU0wLIy8sjLy+PsrIy3G43
      Pp+P7Oxs8vLyaGxsZOPGjeTl5bFv3z5Wr16NaZoAmKY57ZfMmwn0xfNmMIjf7494+qCZONmD
      ZnTZE8lszR0KhaLKHggEZjBNdJQ9PqLNboVC1z1mTAsgFAqxe/du1qxZw9KlS5k/fz4+n4/d
      u3dTXFyM2+0GwOFwTPo9p9OJyzU1ijHNffFiuFx4PJ6Ip3cZiZPdZUSXPZHM1txOpzOq7BPr
      RiJQ9viINrvDef1n8GP6GsCJEyfIycnB4/EwMjJCbW0tAIZhsGTJEj788ENqamq46aabwvcb
      hjGlEEREZObFtABWrFjB3LlzGR4eJhAIkJ+fT2dnJ3fffTder5fNmzdjWRa33XZbLIcVEZFr
      ENPzFAsXLmThwoWT7pvY2wfIyMggIyMjlkOKiMg10vsARERsSgUgImJTKgAREZtSAYiI2JQK
      QETEplQAIiI2pQIQEbEpFYCIiE2pAEREbEoFICJiUyoAERGbUgGIiNiUCkBExKZUACIiNqUC
      EBGxKRWAiIhNqQBERGxKBSAiYlMqABERm1IBiIjYlApARMSmVAAiIjbliuXMBgcHOXHiBIFA
      gDvvvJPu7m5qampYtmwZK1eupLy8nKGhIbZv347X643l0CIiEqWYHgEEg0HuvPNO1q9fT01N
      DVVVVezatYu6ujq6u7sxDIOSkhJ+/etfx3JYERG5BjE9Ali4cCGtra2cOHGC3/3d36W3txcA
      j8dDT08POTk5pKSkEAqFAAgEAgCEQiGCweCU+ZnT3BcvZjCI3++PePqgmTjZg2Z02RPJbM0d
      CoWiyj6xLiQCZY+PaLNbv9mOXo+YFkBHRwcffvghX/jCF3A4HOGNejAYJC0tjd7eXrKyssLT
      u91uAEzTxDCMKfMzXDGNd10MlwuPxxPx9C4jcbK7jOiyJ5LZmtvpdEaVfWJdSATKHh/RZnc4
      r/8ETkxPATU3N+N2uzl8+DDt7e0sWbKEd955h0WLFpGdnU1bWxtvvfUWxcXFsRxWRESuQUx3
      U2+//fZJt7Oysrj11lvDt+++++5YDiciItdBl4GKiNiUCkBExKZUACIiNqUCEBGxKRWAiIhN
      qQBERGxKBSAiYlMqABERm1IBiIjYlApARMSmVAAiIjalAhARsSkVgIiITakARERsSgUgImJT
      KgAREZtSAYiI2JQKQETEplQAIiI2pQIQEbEpFYCIiE2pAEREbCrmBdDb20tPTw8AHR0dVFZW
      cubMGQAaGho4efIklmXFelgREYlSTAugs7OTEydO0NDQAEBVVRUFBQXcfPPNDA8PU1NTQ3Z2
      NuXl5bEcVkREroErljPLyMhg69at1NXVATA6OsrJkyfJzc3FNE2KiorIycnh7NmzAAQCAQBC
      oRDBYHDK/Mxp7osXMxjE7/dHPH3QTJzsQTO67IlktuYOhUJRZZ9YFxKBssdHtNmtUOi6x4xp
      Afy23//93wfg9ddfZ+3atYyNjWFZFqHfBHe73QCYpolhGFN+33DNaLyoGC4XHo8n4uldRuJk
      dxnRZU8kszW30+mMKvvEupAIlD0+os3ucF7/CZyYbqVaW1v56KOP6OrqIj09nfPnz4ef4Nzc
      XF599VXq6upYtWpVLIcVEZFrENMCyMnJIScnJ3z75ptvZmxsDI/Hg8Ph4L777iMQCMzavToR
      kU+TGT9PkZycHP53tIc4IiIyc/Q+ABERm1IBiIjYlApARMSmVAAiIjalAhARsSkVgIiITakA
      RERsSgUgImJTKgAREZtSAYiI2JQKQETEplQAIiI2pQIQEbEpFYCIiE2pAEREbEoFICJiUyoA
      ERGbUgGIiNiUCkBExKZUACIiNqUCEBGxKRWAiIhNuWI5s+HhYQ4cOEBeXh5r1qyhsrKS3t5e
      UlNT2bp1K3v27MGyLDZt2kRmZmYshxYRkSjFtAAAtm7dSmNjIwDd3d3cfffdvP322zQ3N5Of
      n09hYSGlpaWTCsCyLILB4JR5hUKhWMe7ZqFQaNqMHzd9oog2eyKZrbmvtkxfTbPlL8IAAAvp
      SURBVChkzmCa6ESd3UycZT365332Zrcs67rHjGkBzJkzB9P8nwXZ5XKF/+/z+UhLS8PpdOJw
      OAAIBALA5QfidOpslIjIjRTzI4ArjY2NYVkWo6OjZGRkUF1dzbx588LF4Ha7ATBNE8Mwpvx+
      IpWC0+kM5450+kQRbfZEMltzOxyOKJeXqct/vESd3UicZT365332Zp/Ykb4eMV27WltbOX/+
      PMFgkKamJm6//Xb279/P2rVrWbBgAV6vl4qKCkpKSmI5rIiIXIOYFkBOTg45OTmT7tu1a1f4
      38XFxbEcTkRErkPiHP+IiMgNpQIQEbEpFYCIiE2pAEREbEoFICJiUyoAERGbUgGIiNiUCkBE
      xKZUACIiNqUCEBGxKRWAiIhNqQBERGxKBSAiYlMqABERm1IBiIjYlApARMSmVAAiIjalAhAR
      sSkVgIiITakARERsSgUgImJTKgAREZtSAYiI2JRrJmd+/PhxxsfH8Xq9bNq0iT179mBZFps2
      bSIzM3MmhxYRkU8wowUwPDzMHXfcgcfjoampifz8fAoLCyktLZ1UAJZlEQwGp/x+KBSayXhR
      CYVC02b8uOkTRbTZE8lszX21ZfpqQiFzBtNEJ+rsZuIs69E/77M3u2VZ1z3mjBbAzTffTEVF
      Bb29vRQWFpKWlobT6cThcAAQCASAyw/E6dTZKBGRG2lGC2Dx4sWsXr2aN998k4yMDKqrq5k3
      bx4u1+Vh3W43AKZpYhjGlN9PpFJwOp3h3JFOnyiizZ5IZmtuh8MR5fIydfmPl6izG4mzrEf/
      vM/e7BM70tdjRteu1tZWTp06RWFhIQsWLMDr9VJRUUFJSclMDisiIhGY0QJYt27dpNvFxcUz
      OZyIiEQhcY5/RETkhlIBiIjYlApARMSmVAAiIjalAhARsSkVgIiITakARERsSgUgImJTKgAR
      EZtSAYiI2JQKQETEplQAIiI2pQIQEbEpFYCIiE2pAEREbEoFICJiUyoAERGbUgGIiNjUDfvG
      bcuy2LNnD5ZlsWnTJjIzM2/U0CIiMo0bdgTQ3NxMfn4+9957L6dPn75Rw4qIyFXcsALw+Xyk
      paXhdDpxOBw3algREbmKG1YAGRkZNDQ0MDQ0hMt1w848iYjIVdywAliwYAFer5eKigq2bdt2
      o4YVEZGruKG74sXFxTdyOBER+RgOy7KseA0eCASAy1cITfe6QGv3AK3dgzc61rRyFs8jZ/FN
      EU/f1jNIe8+lGUwUuaxFaWQvmhfx9JU1zTOYJjobC5dGNf2HFzpnKEl05qS4yc9eEPH0w6Pj
      XGjrn8FEkYs6+9g4FzsSYz1NTXaTlxn5euobC9DUPTSDiSLn9bjITU+LePqmniFG/cHrGjOu
      BTAhEAjgdrvjHeOaKHt8zNbspmkCYBhGnJNEb7Y+56DsV6M3gomI2FRCHAGIiMiNlzBHAJcu
      XaKxsTF8+6OPPoro98bGxmhunv6ctWVZtLS0hG93dXVddT51dXUAV53XJ5mYd0tLC36//2PH
      mk5PTw+jo6PheYyPj9Pff/mcsGVZVFZWcvr0acbGxj52PkNDQwwMDEy6r6+vj76+vk/McO7c
      Od577z2CwSDnz5+PKv90WlpaCIVCAIyMjPDuu+/GZL7Xq6enh8rKSi5cuEA0+z99fX309vbG
      LIff7w//ra5cTifU1dXR3Nx81b/5xOmk6fT09GCa5rTL4tWWzyv/NpZlhf92sXLp0iUqKytp
      aGiY9ud1dXVT1ufu7u5PXOZjna+mpmbax/5J24aJv8fHbZNm0vj4OCdOnKC6ujri5TphCqCt
      rY2DBw8C0Nvby549e4DLG46J/4+NjdHf309nZyd9fX309PQwPj7OxYsXw094MBikqakp/HtX
      vufg9OnThEIhhoaGaGhowDRNLMuira2Ns2fPAuB2u7Esi/b29vBG0+fz0dzczMjISHj6S5cm
      v8B7+vRpOjo6OH/+PA6HA8MwGBkZYWBggM7Oyy9M+v3+8Hwmcvr9fgC8Xi/79++ntbWV5uZm
      fD4f9fX1wOWVsaOjg6ysLPbt2zfpObEsa1I+p9OJ0+nE7/eH5z84OEhzczMdHR1Xff5PnjxJ
      IBBg+fLlmKZJQ0MDjY2NjI+PY1kWjY2NjI6OTnn+RkZG6O7uDm8Yu7u7wxsXl8sVfnH/0KFD
      FBUVhce78jGMjIzQ0dER3hgODQ3R2toa/vno6Gh4+lioqalhyZIljI6O8v7772NZFk1NTQwP
      DzM2NkYwePmFNZ/Px8jICE1NTQSDQS5dusTgYOxe7JzY6Xnvvffw+/2EQiEaGhrCG7zm5mY6
      OzsJBAKMjo4SDAbDy2UwGGTPnj10dnZimuak533iMY6Pj7N//35SU1MnLSMTyydAZ2cnXV1d
      WJY16W9eU1PDiRMnGB4ejtnjbWtrw+v14vP5wut6X19feP1obm5mfHyclpaW8PJlGAZO543Z
      TLW1tZGamorH46GsrGzKtmS6bcOlS5doa2ub9PcYHR2d9BiuXBcDgQCXLl2iqakpqp2PSBw5
      coQVK1aQkpJCMBicso5duS2auJ0wBQCwdOlSWltbOXPmDGvXrgWgoqICgHfffZePPvqI6upq
      Dh48SFNTE0eOHAEuL8T9/f2cOHGCjo4OxsfH2bt3Lw6Hg+rq6kljDA8P8+abbzI8PMyJEyc4
      cuQI/f394ZWuurqaoaEh+vv7OXbsGIODg7z22muMjIxw6NAhqqqqaGlpmdLwLS0tlJWVsWPH
      Dvx+P/X19ZSXl1NfX8/Ro0fx+/3s3r0bv9/P0aNHKS0txe/309bWBlwugOXLl7N//362bNky
      5blxuVwkJSXhcDjCz8mJEyewLGtSvr6+Pjo6OmhtbSUQCPCrX/0KuHyEcuHCBc6dOzftc9/f
      309RURELFy7E4/HQ2NiI3++nrKyMY8eOEQgE2Ldv35Tn78CBA3R0dHDo0CECgQBtbW2cOXOG
      hoYGqqurwwWwePFijh07xvz586f8XcvLy+nt7eXw4cP09fVx+PBhent7OX36NAcPHuTgwYPh
      K8ZiJRQKEQgESEpK4tixY4yMjLB//34uXbpEeXk5g4ODnDp1KrxR2r9/f0zHn1BVVUV/fz/5
      +fmUlpYSDAbZu3fvpGlGR0cpLS3F5/OFl8v+/n5GR0cZGBhgfHx80vM+4a233mLFihWkpqZO
      WkYmls+KigpaW1s5cuQIwWBw0t98dHSU4eHh8A5KrMyZM4eioiKCwSC9vb1UVlZy/vx5mpqa
      wtPU19czNDTEyZMnuXjxYvjI+EYIhUIEg0HcbvekbQlMv23Yu3cvAwMDDA4Ohv8elmVNegxX
      rostLS0cOXKElpaW8FmHWMnJyeHo0aN4PB7cbveUdWxiWxQMBvnP//xPTp06lVgFsGrVKmpr
      awkGgyQlJU07zdq1a8nIyGD9+vUsWHD5UrW8vDzWrl3L0NAQ3d3dtLe34/P5rjpOYWEht9xy
      C36/H9M0KSoqYtGiReGfT+yBBoNBhoaGWLJkCatWrcLr9ZKfn8/AwMCUQ+jMzEy8Xu+kPUTD
      MCguLiYrK4v+/n7y8vIoKCjA7XZz6623Ul9fP+lIorOzE6/XO+3ebnNzM7W1tXz+85+f8rMr
      803o6Oigvb09vAKvWLGCzZs3hwvntwWDwUl7JHl5eaxcuRLDMOjp6aGrqwvDMLAsa9LzN2fO
      HNasWcPChQsZGRmhra2NQCAwZU9506ZNfO5zn+PAgQNTNuaGYVBUVMTq1as5f/48fr+f4eFh
      QqEQHo+He+65h3nzIr+MNRK1tbXU1NSwZs0a/H4/hYWFFBQUYFkWly5d4sMPP6S4uJjW1lY6
      OztjviGcUFBQwODgYHhvt6CggAULFoSPQgBee+01tmzZwvDwcHi59Pv9pKens2rVqnAB/Pbz
      vmHDhvCGdbplZGhoiOLiYjIyMoDJf/P09HSWLl3KwoULZ+Rxm6YZ3nMOhUKTTvMUFhZSVFQ0
      Y8/5x5nYsfzMZz4z7bbkt7cNy5cvp6GhAafTGf57uFyuSY/ht9fFNWvWsGLFipg/vltuuYV7
      7rmHDz74YMop3yu3RaZpsnTpUu644w7+P8dyvJAmzFmKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Total Dismissals per Season' width='384'>
      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
      MNb/BVjeQr/dpwIZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Total Runs Scored by Teams' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Total Runs Scored per Season' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Total Runs in 1st Innings per Season' width='384'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='Total Runs in 2nd Innings per Season' width='384'>
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
